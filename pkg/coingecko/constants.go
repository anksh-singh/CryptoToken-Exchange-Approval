package coingecko

// TODO:Need to be optimized
var assetPlatformsCoingeckoId = map[string]string{
	//cosmos chains
	"cosmoshub": "cosmos",
	"kava":      "kava",
	"osmosis":   "osmosis",
	"secret":    "secret",

	"bsc":      "binance-smart-chain",
	"matic":    "polygon-pos",
	"polygon":  "polygon-pos",
	"polkadot": "polkadot",
	"gnosis":   "xdai",
	//"stafi":     "stafi",
	"algorand": "algorand",
	"near":     "near-protocol",
	"heco":     "huobi-token",
	//"edgeware":  "edgeware",
	"zilliqa": "zilliqa",
	"solana":  "solana",
	//"harmony":   "harmony",
	"avalanche": "avalanche",
	"elrond":    "elrond",
	"tomochain": "tomochain",
	"arbitrum":  "arbitrum-one",
	"fantom":    "fantom",
	"celo":      "celo",
	"metis":     "metis-andromeda",
	"boba":      "boba",
	"xinfin":    "",
	"aurora":    "aurora",
	"optimism":  "optimistic-ethereum",
	"ethereum":  "ethereum",
	//"gnosis":    "xdai",
	"evmos":     "evmos",
	"cronos":    "cronos",
	"moonriver": "moonriver",
	"moonbeam":  "moonbeam",
	"klaytn":    "klay-token",
	"fuse":      "fuse",
	"astar":     "astar",
	"aptos":     "aptos",
}

// TODO:Use coingecko API to get ID mapping
var coingeckoCoinsListMap = map[string]string{
	//cosmos chains
	"near":           "near",
	"cosmoshub":      "cosmos",
	"bandchain":      "band-protocol",
	"kava":           "kava",
	"osmosis":        "osmosis",
	"axelar":         "axelar",
	"akash":          "akash-network",
	"crescent":       "crescent-network",
	"cryptoorgchain": "crypto-com-chain",
	"injective":      "injective-protocol",
	"juno":           "juno-network",
	"kujira":         "kujira",
	"secretnetwork":  "secret",
	"sifchain":       "sifchain",
	"umee":           "umee",
	"regen":          "regen",
	"stargaze":       "stargaze",
	"sentinel":       "sentinel",
	"persistence":    "persistence",
	"irisnet":        "iris-network",
	"agoric":         "agoric",
	"shentu":         "certik",
	"impacthub":      "ixo",
	"emoney":         "e-money",
	"sommelier":      "sommelier",
	"bostrom":        "bostrom",
	"gravitybridge":  "graviton",
	"stride":         "stride",
	"assetmantle":    "assetmantle",
	"terra":          "terra-luna",
	"terra2":         "terra-luna-2",
	"thorchain":      "thorchain",
	"bluzelle":       "bluzelle",

	//evm chains
	"bsc":       "binancecoin",
	"matic":     "matic-network",
	"polygon":   "matic-network",
	"polkadot":  "polkadot",
	"stafi":     "stafi",
	"algorand":  "algorand",
	"heco":      "huobi-token",
	"edgeware":  "edgeware",
	"zilliqa":   "zilliqa",
	"harmony":   "harmony",
	"avalanche": "avalanche-2",
	"elrond":    "elrond-erd-2",
	"tomochain": "tomochain",
	"arbitrum":  "ethereum",
	"fantom":    "fantom",
	"celo":      "celo",
	"metis":     "metis-token",
	"boba":      "boba-network",
	"xinfin":    "xdce-crowd-sale",
	"aurora":    "aurora-near",
	"optimism":  "ethereum",
	"ethereum":  "ethereum",
	"gnosis":    "xdai",
	"moonriver": "moonriver",
	"moonbeam":  "moonbeam",
	"klaytn":    "klay-token",
	"bttc":      "bittorrent",
	"iotex":     "iotex",
	"fuse":      "fuse-network-token",
	"astar":     "astar",
	"solana":    "solana",
	"aptos":     "aptos",

	//EVM-Cosmos Compatible
	"cronos": "crypto-com-chain",
	"evmos":  "evmos",
}

// TokenAddressMapForTokenInfo TODO: Need to move constants to a separate config
var TokenAddressMapForTokenInfo = map[string]string{
	"bsc":        "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"polygon":    "0x0000000000000000000000000000000000001010",
	"celo":       "",
	"optimism":   "",
	"avalanche":  "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"ethereum":   "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"solana":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"tezos":      "kteeeeeeeeeeeeeeeeeeeeeeee",
	"tomochain":  "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"fantom":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"arbitrum":   "",
	"algorand":   "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"harmony":    "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"harmonyone": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"zilliqa":    "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"metis":      "0xdeaddeaddeaddeaddeaddeaddeaddeaddead0000",
	"aurora":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"elrond":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"gnosis":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"moonriver":  "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"moonbeam":   "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"klaytn":     "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"boba":       "0x4200000000000000000000000000000000000006",
	"xinfin":     "xdceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"heco":       "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"bttc":       "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"iotex":      "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"evmos":      "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"fuse":       "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"astar":      "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
	"aptos":      "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
}

const (
	tokenABI = `[
	{
		"constant": true,
		"inputs": [],
		"name": "name",
		"outputs": [{"name": "","type": "string"}],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "decimals",
		"outputs": [{ "name": "", "type": "uint8" }],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "symbol",
		"outputs": [{ "name": "", "type": "string" }],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}]`

	decimals = "decimals"
	name     = "name"
	symbol   = "symbol"
)
