syntax = "proto3";
package proto;

option go_package  = "./pb";

//All proto fields mentioned here will come with default response in case of absence of data
//For example, string type come with "" likewise float/double - 0.0,int64/32 -0 bool-false
message TokenPriceRequest {
  string chain = 1;
  string currency = 2;
}

message TokenPriceResponse {
  double price = 1;
  string currency_code = 2;
  string currency_symbol = 3;
}

message TokenPriceResponseV2 {
  string price = 1;
  string currency_code = 2;
  string currency_symbol = 3;
}

message BalanceRequest {
  string chain = 1;
  string address  = 2;
}

message BalanceResponse {
  string address = 1;
  string quote_currency = 2;
  repeated TokenBalance token = 3;
}

message TokenBalance {
  string contract_name = 1;
  string contract_ticker_symbol = 2;
  int32 contract_decimals = 3;
  string contract_address = 4;
  int64 coin = 5;
  string balance = 6;
  double quote = 7;
  double quote_rate = 8;
  string logo_url = 9;
  string quote_rate_24h = 10;
  double quote_pct_change_24h = 11;
  string quote_price  = 12;
}

message ProcessingFeeRequest {
  string chain = 1;
  bool gas_price  = 2;
  bool transaction_fee = 4;
}

message ProcessingFeeResponse {
  double value = 1;
}

message NonceRequest {
  string chain = 1;
  string address = 2;
}

message NonceResponse {
  int64 nonce = 1;
  double quote_value = 2;
  double op_l1_fee = 3;
  GasPriceInfo gas_price = 4;
}

message GasPriceInfo {
  double fast = 1;
  double safe_low = 2;
  double fastest = 3;
  double average = 4;
  int64 safe_low_wait = 5;
  int64 avg_wait = 6;
  int64 fast_wait = 7;
  double fastest_wait = 8;
}

message SendTransactionRequest {
  string chain = 1;
  string msg = 2;
}

message SendTransactionResponse {
  string transaction_id = 1;
}

message TransactionData {
  string id = 1;
  string from = 2;
  string to = 3;
  string fee = 4;
  int64 date = 5;
  string status = 6;
  string type = 7;
  int64 block = 8;
  string value = 9;
  int64 nonce = 10;
  int64 native_token_decimals = 11;
  string description = 12;
  repeated TransactionInfo sent = 13; //Returns empty array when data not found
  repeated TransactionInfo received = 14; //Returns empty array when data not found
  repeated TransactionInfo others = 15; //Returns empty array when data not found
}

message ListTransactionRequest {
  string chain = 1;
  string address = 2;
  bool testnet = 3; //Currently testnet is not supported
  string page = 4;
  string page_size = 5;
  string token_contract_address = 6;
}

message ListTransactionResponse {
  int64 page = 1;
  int64 total_pages = 2;
  int64 items_on_page = 3;
  int64 total_txs = 4;
  repeated TransactionData transactions = 5; //Returns empty array when data not found
}

message GetTransactionRequest {
  string chain = 1;
  string  transaction_id = 2;
  bool testnet = 3;
}

message TransactionInfo {
  string name = 1;
  string symbol = 2;
  string token_id = 3;
  int64 decimals = 4;
  string value = 5;
  //float quote = 6; //Optional field //TODO: Add support pending
  float quote_rate  = 6; //Optional field
  string logo_url = 7;
  string from = 8;
  string to = 9;
}

message ValidatorDetails {
  string name = 1;
  string description = 2;
  string apr = 3;
  string logo_url = 4;
  string validator_address = 5;
}

message GetTransactionResponse {
  string id = 1;
  string from = 2;
  string to = 3;
  string fee = 4;
  int64 date = 5;
  string status = 6;
  string type = 7;
  int64 block = 8;
  string value = 9;
  int64 nonce = 10;
  int64 native_token_decimals = 11;
  string description = 12;
  string explorer_link = 13;
  repeated TransactionInfo sent = 14; //Returns empty array when data not found
  repeated TransactionInfo received = 15; //Returns empty array when data not found
  repeated ValidatorDetails validator_details = 16; //Returns empty array when data not found
}

message GasLimitRequest {
  string chain = 1;
  string from = 2;
  string to = 3;
  int64 gas = 4;
  int64 gas_price = 5;
  int64 value = 6;
  string data = 7;
}

message GasLimitResponse {
  int64 gas_limit = 1;
  string input_data = 2;
}

message TxStatusRequest {
  string chain = 1;
  string tx_hash = 2;
}

message Log {
  bool removed = 1;
  int64 log_index = 2;
  int64 transaction_index = 3;
  string transaction_hash = 4;
  int64 block_number = 5;
  string block_hash = 6;
  string address = 7;
  string data = 8;
  repeated string topics = 9;
}

message TxStatusResponse {
  string transaction_hash = 1;
  int64 transaction_index = 2;
  string block_hash = 3;
  int64 block_number = 4;
  int64 cumulative_gas_used = 5;
  int64 gas_used = 6;
  string contract_address = 7;
  repeated Log logs = 8; //Returns empty array when data not found
  string logs_bloom = 9;
  string root = 10;
  string status = 11;
}

message TokenDetailRequest {
  string chain = 1;
  string  contract_address = 2;
}

message TokenDetailResponse {
  string token_name = 1;
  string token_symbol = 2;
  string token_decimals = 3;
  string  token_address = 4;
  string  token_logo_url = 5;
  string  token_listed_count = 6;
  string  token_price = 7;
  string  token_last_activity = 8;
  string  token_website = 9;
  string  token_trade_volume = 10;
  string  logo_url = 11;
}

message TokenInfoRequest {
  string token = 1;
  string range = 2;
  string chain = 3;
}

message TokenInfoResponse {
  string token = 1;
  string chart = 2;
  string utility = 3;
}

message AllowanceRequest {
  string chain = 1;
  string contract = 2;
  string owner = 3;
  string spender = 4;
}

message  AllowanceResponse {
  string allowance = 1;
}

message  BulkAllowanceResponse {
  repeated AllowanceResponse response = 1;
}

message ApprovalRequest {
   string target = 1;
   string token = 2;
   string chain = 3;
}

message AllowanceParams {
  string contract = 1;
  string owner = 2;
  string spender = 3;
  string amount = 4;
  string encoded_data = 5;
}

message ApprovalResponse {
  string to =1;
  string value = 2;
  string data = 3;
  string gas_limit = 4;
  string tx_link = 5;
}

message BulkApprovalResponse {
  repeated ApprovalResponse response = 1;
}

message UserDataRequest {
  string chain = 1;
  string address = 2;
  string contract = 3;
}

message UserDataResponse {
  double quote_rate = 1;
  double total_fees_paid = 2;
  double total_fees_paid_usd = 3;
  double average_token_price = 4;
  double overall_profit_loss = 5;
  double current_holding_quantity = 6;
  double percentage_change_24H = 7;
  double price_change_24H = 8;
}

message ENSRequest {
  string domain = 1;
}

message ENSResponse {
  string address = 1;
}
message NftCollectionRequest {
  string Address = 1;
	string Page = 2;
	string PageSize = 3;
	string Chain =4;
}
message NftCollectionResponse {
    string banner_image_url = 1;
    string chat_url = 2;
    string created_date = 3;
    bool default_to_fiat = 4;
    string description  = 5;
    string dev_buyer_fee_basis_points = 6;
    string dev_seller_fee_basis_points 	= 7;
    string discord_url = 8;
    NFTDisplayData display_data = 9;  		      
    string external_url = 10;
    bool featured = 11;
    string featured_image_url = 12;
    bool hidden = 13;
    string safelist_request_status = 14;
    string image_url = 15;
    bool is_subject_to_whitelist = 16;
    string large_image_url = 17;
    string medium_username = 18;
    string name = 19;
    bool only_proxied_transfers = 20;
    string opensea_buyer_fee_basis_points = 21;
    string opensea_seller_fee_basis_points = 22;
    string payout_address = 23;
    bool require_email = 24;
    string short_description = 25;
    string slug = 26;
    string telegram_url = 27;
    string twitter_username = 28;
    string InstagramUsername = 29;
    string wiki_url = 30;
    bool is_nsfw = 31;
    repeated NftData nft_data = 32;
}

message NftData {
  int64 id = 1;
  int64 num_sales = 2;
  string background_color = 3;
  string image_url = 4;
  string image_preview_url = 5;
  string image_thumbnail_url = 6;
  string image_original_url = 7;
  string animation_url = 8;
  string animation_original_url = 9;
  string name = 10;
  string description = 11;
  string external_link = 12;
  NftDataAssetContract asset_contract = 13;
  string permalink = 14;
  string decimals = 15;
  string token_metadata = 16;
  bool is_nsfw = 17;
  NftDataOwner owner = 18;
  repeated NftDataSellOrders sell_orders = 19;
  string seaport_sell_orders = 20;
  NftDataCreator creator = 21;
  repeated NftDataTraits traits = 22;
  NftDataLastSale last_sale = 23;
  string top_bid = 24;
  string listing_date = 25;
  bool is_presale =  26;
  string transfer_fee_payment_token = 27;
  string transfer_fee = 28;
  string token_id = 29;
  string collection_name =  30;
  string contractAddress = 31;
}

message NftDataAssetContract {
  string address = 1;
}

message NftDataOwner {
}

message NftDataSellOrders {
}

message NftDataCreator {
  NftDataUser user = 1; 
  string profile_img_url = 2;
  string address = 3;
  string config = 4;
}
message NftDataUser {
  string username = 1;
}

message NftDataTraits {
  string trait_type = 1;
  string value = 2;
  string display_type = 3;
  string max_value = 4;
  int64 trait_count = 5;
  string order = 6;
}

message NftDataLastSale {
  string amount = 1;
  string symbol = 2;
}

message ListNftCollectionResponse {
    repeated  NftCollectionResponse nft = 1;
}

message NFTDisplayData {
  string card_display_style = 1;
}

//message GetPositionRequest{
//  repeated string ChainIds =1;
//  repeated string ProtocolIds = 2;
//  string Address = 3;
//  string Currency = 4;
//}

message GetPositionRequest {
  repeated PositionChainData items = 1;
}

message PositionChainData {
  string chain = 1;
  string address = 2;
  repeated string protocol_ids = 3;
}
//message Token {
//  string mint = 1;
//  double amount = 2;
//  double price = 3;
//  string symbol = 4;
//}
//
//message ProtocolsData {
//  string owner = 1;
//  string networkId = 2;
//  string platformId = 3;
//  string displayType = 4;
//  double value = 5;
//  Token token = 6;
//}
//
//message GetPositionsResponse {
//  repeated ProtocolsData items = 1;
//}

message GetPositionsResponse {
  repeated Positions positions = 1;
}

message Tokens_supplied {
  string token_address = 1;
  string token_name = 2;
  string token_symbol = 3;
  uint32 token_decimals = 4;
  string logo_url = 5;
  string balance = 6;
  string quote_rate = 7;
  string quote_price = 8;
}

message Underlying_token_list {
  string token_address = 1;
  string token_name = 2;
  string token_symbol = 3;
  uint32 token_decimals = 4;
  string logo_url = 5;
  string balance = 6;
  string quote_rate = 7;
  string quote_price = 8;
}

message Lending {
  bool is_actionable = 1;
  string type = 2;
  string asset_value = 3;
  string net_value = 4;
  repeated Tokens_supplied tokens_supplied = 5;
  repeated Underlying_token_list underlying_token_list = 6;
}

message Portfolio {
  string net_usd_value = 1;
  repeated Lending lending = 2;
  repeated Liquidity_pool liquidity_pool = 3;
}

message Liquidity_pool {
  bool is_actionable = 1;
  string type = 2;
  string asset_value = 3;
  string net_value = 4;
  repeated Tokens_supplied tokens_supplied = 5;
  repeated Underlying_token_list underlying_token_list = 6;
}

message Protocols {
  string protocol_id = 1;
  string name = 2;
  string site_url = 3;
  string logo_url = 4;
  bool is_actionable = 5;
  Portfolio portfolio = 6;
}

message Positions {
  string chain = 1;
  string address = 2;
  repeated Protocols protocols = 3;
}

message GetOpportunitiesRequest{
  string chain = 1;
}

message GetOpportunitesResponse{
  bytes opportunities = 1;
}