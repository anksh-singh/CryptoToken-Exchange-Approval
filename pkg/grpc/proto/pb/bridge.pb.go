// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: bridge.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BridgeChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain          string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Option         string `protobuf:"bytes,2,opt,name=option,proto3" json:"option"`
	BridgeProvider string `protobuf:"bytes,3,opt,name=bridge_provider,json=bridgeProvider,proto3" json:"bridge_provider"`
}

func (x *BridgeChainRequest) Reset() {
	*x = BridgeChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeChainRequest) ProtoMessage() {}

func (x *BridgeChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeChainRequest.ProtoReflect.Descriptor instead.
func (*BridgeChainRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *BridgeChainRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *BridgeChainRequest) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *BridgeChainRequest) GetBridgeProvider() string {
	if x != nil {
		return x.BridgeProvider
	}
	return ""
}

type BridgeChainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*BridgeChainInfo `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains"`
}

func (x *BridgeChainResponse) Reset() {
	*x = BridgeChainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeChainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeChainResponse) ProtoMessage() {}

func (x *BridgeChainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeChainResponse.ProtoReflect.Descriptor instead.
func (*BridgeChainResponse) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *BridgeChainResponse) GetChains() []*BridgeChainInfo {
	if x != nil {
		return x.Chains
	}
	return nil
}

type BridgeChainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol"`
	ChainType string `protobuf:"bytes,2,opt,name=chain_type,json=chainType,proto3" json:"chain_type"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Coin      string `protobuf:"bytes,4,opt,name=coin,proto3" json:"coin"`
	ChainId   int64  `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id"`
	LogoUrl   string `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	MainNet   bool   `protobuf:"varint,7,opt,name=main_net,json=mainNet,proto3" json:"main_net"`
}

func (x *BridgeChainInfo) Reset() {
	*x = BridgeChainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeChainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeChainInfo) ProtoMessage() {}

func (x *BridgeChainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeChainInfo.ProtoReflect.Descriptor instead.
func (*BridgeChainInfo) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{2}
}

func (x *BridgeChainInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BridgeChainInfo) GetChainType() string {
	if x != nil {
		return x.ChainType
	}
	return ""
}

func (x *BridgeChainInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BridgeChainInfo) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *BridgeChainInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *BridgeChainInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *BridgeChainInfo) GetMainNet() bool {
	if x != nil {
		return x.MainNet
	}
	return false
}

type BridgeChainTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain          string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	FromChain      string `protobuf:"bytes,2,opt,name=from_chain,json=fromChain,proto3" json:"from_chain"`
	ToChain        string `protobuf:"bytes,3,opt,name=to_chain,json=toChain,proto3" json:"to_chain"`
	FromToken      string `protobuf:"bytes,4,opt,name=from_token,json=fromToken,proto3" json:"from_token"`
	FullList       bool   `protobuf:"varint,5,opt,name=full_list,json=fullList,proto3" json:"full_list"` //Optional
	BridgeProvider string `protobuf:"bytes,6,opt,name=bridge_provider,json=bridgeProvider,proto3" json:"bridge_provider"`
}

func (x *BridgeChainTokensRequest) Reset() {
	*x = BridgeChainTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeChainTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeChainTokensRequest) ProtoMessage() {}

func (x *BridgeChainTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeChainTokensRequest.ProtoReflect.Descriptor instead.
func (*BridgeChainTokensRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{3}
}

func (x *BridgeChainTokensRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *BridgeChainTokensRequest) GetFromChain() string {
	if x != nil {
		return x.FromChain
	}
	return ""
}

func (x *BridgeChainTokensRequest) GetToChain() string {
	if x != nil {
		return x.ToChain
	}
	return ""
}

func (x *BridgeChainTokensRequest) GetFromToken() string {
	if x != nil {
		return x.FromToken
	}
	return ""
}

func (x *BridgeChainTokensRequest) GetFullList() bool {
	if x != nil {
		return x.FullList
	}
	return false
}

func (x *BridgeChainTokensRequest) GetBridgeProvider() string {
	if x != nil {
		return x.BridgeProvider
	}
	return ""
}

type BridgeChainTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*BridgeTokens `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens"`
}

func (x *BridgeChainTokensResponse) Reset() {
	*x = BridgeChainTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeChainTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeChainTokensResponse) ProtoMessage() {}

func (x *BridgeChainTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeChainTokensResponse.ProtoReflect.Descriptor instead.
func (*BridgeChainTokensResponse) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{4}
}

func (x *BridgeChainTokensResponse) GetTokens() []*BridgeTokens {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type BridgeTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress  string `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address"`
	TokenDecimals int64  `protobuf:"varint,2,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals"`
	TokenSymbol   string `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol"`
	TokenName     string `protobuf:"bytes,4,opt,name=token_name,json=tokenName,proto3" json:"token_name"`
	TokenLogoUrl  string `protobuf:"bytes,5,opt,name=token_logo_url,json=tokenLogoUrl,proto3" json:"token_logo_url"`
}

func (x *BridgeTokens) Reset() {
	*x = BridgeTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTokens) ProtoMessage() {}

func (x *BridgeTokens) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTokens.ProtoReflect.Descriptor instead.
func (*BridgeTokens) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{5}
}

func (x *BridgeTokens) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *BridgeTokens) GetTokenDecimals() int64 {
	if x != nil {
		return x.TokenDecimals
	}
	return 0
}

func (x *BridgeTokens) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *BridgeTokens) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *BridgeTokens) GetTokenLogoUrl() string {
	if x != nil {
		return x.TokenLogoUrl
	}
	return ""
}

type BridgeQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromChain      string `protobuf:"bytes,1,opt,name=from_chain,json=fromChain,proto3" json:"from_chain"`
	FromToken      string `protobuf:"bytes,2,opt,name=from_token,json=fromToken,proto3" json:"from_token"`
	ToChain        string `protobuf:"bytes,3,opt,name=to_chain,json=toChain,proto3" json:"to_chain"`
	ToToken        string `protobuf:"bytes,4,opt,name=to_token,json=toToken,proto3" json:"to_token"`
	FromAmount     string `protobuf:"bytes,5,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount"`
	FromAddress    string `protobuf:"bytes,6,opt,name=from_address,json=fromAddress,proto3" json:"from_address"`
	ToAddress      string `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address"`
	Chain          string `protobuf:"bytes,8,opt,name=chain,proto3" json:"chain"`
	BridgeProvider string `protobuf:"bytes,9,opt,name=bridge_provider,json=bridgeProvider,proto3" json:"bridge_provider"`
}

func (x *BridgeQuoteRequest) Reset() {
	*x = BridgeQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeQuoteRequest) ProtoMessage() {}

func (x *BridgeQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeQuoteRequest.ProtoReflect.Descriptor instead.
func (*BridgeQuoteRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{6}
}

func (x *BridgeQuoteRequest) GetFromChain() string {
	if x != nil {
		return x.FromChain
	}
	return ""
}

func (x *BridgeQuoteRequest) GetFromToken() string {
	if x != nil {
		return x.FromToken
	}
	return ""
}

func (x *BridgeQuoteRequest) GetToChain() string {
	if x != nil {
		return x.ToChain
	}
	return ""
}

func (x *BridgeQuoteRequest) GetToToken() string {
	if x != nil {
		return x.ToToken
	}
	return ""
}

func (x *BridgeQuoteRequest) GetFromAmount() string {
	if x != nil {
		return x.FromAmount
	}
	return ""
}

func (x *BridgeQuoteRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *BridgeQuoteRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *BridgeQuoteRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *BridgeQuoteRequest) GetBridgeProvider() string {
	if x != nil {
		return x.BridgeProvider
	}
	return ""
}

type BridgeQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tool        string       `protobuf:"bytes,1,opt,name=tool,proto3" json:"tool"`
	ToolDetails *ToolDetails `protobuf:"bytes,2,opt,name=tool_details,json=toolDetails,proto3" json:"tool_details"`
	Estimate    *Estimate    `protobuf:"bytes,3,opt,name=estimate,proto3" json:"estimate"`
	BridgeFee   *BridgeFee   `protobuf:"bytes,4,opt,name=bridge_fee,json=bridgeFee,proto3" json:"bridge_fee"`
}

func (x *BridgeQuoteResponse) Reset() {
	*x = BridgeQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeQuoteResponse) ProtoMessage() {}

func (x *BridgeQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeQuoteResponse.ProtoReflect.Descriptor instead.
func (*BridgeQuoteResponse) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{7}
}

func (x *BridgeQuoteResponse) GetTool() string {
	if x != nil {
		return x.Tool
	}
	return ""
}

func (x *BridgeQuoteResponse) GetToolDetails() *ToolDetails {
	if x != nil {
		return x.ToolDetails
	}
	return nil
}

func (x *BridgeQuoteResponse) GetEstimate() *Estimate {
	if x != nil {
		return x.Estimate
	}
	return nil
}

func (x *BridgeQuoteResponse) GetBridgeFee() *BridgeFee {
	if x != nil {
		return x.BridgeFee
	}
	return nil
}

type BridgeFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address"`
	Symbol          string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount"`
	TokenDecimals   int64  `protobuf:"varint,4,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals"`
	AmountUsd       string `protobuf:"bytes,5,opt,name=amount_usd,json=amountUsd,proto3" json:"amount_usd"`
}

func (x *BridgeFee) Reset() {
	*x = BridgeFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeFee) ProtoMessage() {}

func (x *BridgeFee) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeFee.ProtoReflect.Descriptor instead.
func (*BridgeFee) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{8}
}

func (x *BridgeFee) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *BridgeFee) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BridgeFee) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *BridgeFee) GetTokenDecimals() int64 {
	if x != nil {
		return x.TokenDecimals
	}
	return 0
}

func (x *BridgeFee) GetAmountUsd() string {
	if x != nil {
		return x.AmountUsd
	}
	return ""
}

type ToolDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	LogoUrl string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
}

func (x *ToolDetails) Reset() {
	*x = ToolDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToolDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolDetails) ProtoMessage() {}

func (x *ToolDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolDetails.ProtoReflect.Descriptor instead.
func (*ToolDetails) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{9}
}

func (x *ToolDetails) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ToolDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolDetails) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

type Estimate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAmount        string  `protobuf:"bytes,1,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount"`
	FromTokenDecimals int64   `protobuf:"varint,2,opt,name=from_token_decimals,json=fromTokenDecimals,proto3" json:"from_token_decimals"`
	ToAmount          string  `protobuf:"bytes,3,opt,name=to_amount,json=toAmount,proto3" json:"to_amount"`
	ToAmountMin       string  `protobuf:"bytes,4,opt,name=to_amountMin,json=toAmountMin,proto3" json:"to_amountMin"`
	ToTokenDecimals   int64   `protobuf:"varint,5,opt,name=to_token_decimals,json=toTokenDecimals,proto3" json:"to_token_decimals"`
	ExecutionDuration float64 `protobuf:"fixed64,6,opt,name=execution_duration,json=executionDuration,proto3" json:"execution_duration"`
	FromAmountUsd     string  `protobuf:"bytes,7,opt,name=from_amount_usd,json=fromAmountUsd,proto3" json:"from_amount_usd"`
	ToAmountUsd       string  `protobuf:"bytes,8,opt,name=to_amount_usd,json=toAmountUsd,proto3" json:"to_amount_usd"`
	ApproveAddress    string  `protobuf:"bytes,9,opt,name=approve_address,json=approveAddress,proto3" json:"approve_address"`
}

func (x *Estimate) Reset() {
	*x = Estimate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Estimate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Estimate) ProtoMessage() {}

func (x *Estimate) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Estimate.ProtoReflect.Descriptor instead.
func (*Estimate) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{10}
}

func (x *Estimate) GetFromAmount() string {
	if x != nil {
		return x.FromAmount
	}
	return ""
}

func (x *Estimate) GetFromTokenDecimals() int64 {
	if x != nil {
		return x.FromTokenDecimals
	}
	return 0
}

func (x *Estimate) GetToAmount() string {
	if x != nil {
		return x.ToAmount
	}
	return ""
}

func (x *Estimate) GetToAmountMin() string {
	if x != nil {
		return x.ToAmountMin
	}
	return ""
}

func (x *Estimate) GetToTokenDecimals() int64 {
	if x != nil {
		return x.ToTokenDecimals
	}
	return 0
}

func (x *Estimate) GetExecutionDuration() float64 {
	if x != nil {
		return x.ExecutionDuration
	}
	return 0
}

func (x *Estimate) GetFromAmountUsd() string {
	if x != nil {
		return x.FromAmountUsd
	}
	return ""
}

func (x *Estimate) GetToAmountUsd() string {
	if x != nil {
		return x.ToAmountUsd
	}
	return ""
}

func (x *Estimate) GetApproveAddress() string {
	if x != nil {
		return x.ApproveAddress
	}
	return ""
}

type BridgeTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromChain      string `protobuf:"bytes,1,opt,name=from_chain,json=fromChain,proto3" json:"from_chain"`
	FromToken      string `protobuf:"bytes,2,opt,name=from_token,json=fromToken,proto3" json:"from_token"`
	ToChain        string `protobuf:"bytes,3,opt,name=to_chain,json=toChain,proto3" json:"to_chain"`
	ToToken        string `protobuf:"bytes,4,opt,name=to_token,json=toToken,proto3" json:"to_token"`
	FromAmount     string `protobuf:"bytes,5,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount"`
	FromAddress    string `protobuf:"bytes,6,opt,name=from_address,json=fromAddress,proto3" json:"from_address"`
	ToAddress      string `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address"`
	Chain          string `protobuf:"bytes,8,opt,name=chain,proto3" json:"chain"`
	BridgeProvider string `protobuf:"bytes,9,opt,name=bridge_provider,json=bridgeProvider,proto3" json:"bridge_provider"`
}

func (x *BridgeTransactionRequest) Reset() {
	*x = BridgeTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTransactionRequest) ProtoMessage() {}

func (x *BridgeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTransactionRequest.ProtoReflect.Descriptor instead.
func (*BridgeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{11}
}

func (x *BridgeTransactionRequest) GetFromChain() string {
	if x != nil {
		return x.FromChain
	}
	return ""
}

func (x *BridgeTransactionRequest) GetFromToken() string {
	if x != nil {
		return x.FromToken
	}
	return ""
}

func (x *BridgeTransactionRequest) GetToChain() string {
	if x != nil {
		return x.ToChain
	}
	return ""
}

func (x *BridgeTransactionRequest) GetToToken() string {
	if x != nil {
		return x.ToToken
	}
	return ""
}

func (x *BridgeTransactionRequest) GetFromAmount() string {
	if x != nil {
		return x.FromAmount
	}
	return ""
}

func (x *BridgeTransactionRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *BridgeTransactionRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *BridgeTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *BridgeTransactionRequest) GetBridgeProvider() string {
	if x != nil {
		return x.BridgeProvider
	}
	return ""
}

type BridgeTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tool               string              `protobuf:"bytes,1,opt,name=tool,proto3" json:"tool"`
	ToolDetails        *ToolDetails        `protobuf:"bytes,2,opt,name=tool_details,json=toolDetails,proto3" json:"tool_details"`
	TransactionRequest *TransactionRequest `protobuf:"bytes,3,opt,name=transaction_request,json=transactionRequest,proto3" json:"transaction_request"`
}

func (x *BridgeTransactionResponse) Reset() {
	*x = BridgeTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTransactionResponse) ProtoMessage() {}

func (x *BridgeTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTransactionResponse.ProtoReflect.Descriptor instead.
func (*BridgeTransactionResponse) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{12}
}

func (x *BridgeTransactionResponse) GetTool() string {
	if x != nil {
		return x.Tool
	}
	return ""
}

func (x *BridgeTransactionResponse) GetToolDetails() *ToolDetails {
	if x != nil {
		return x.ToolDetails
	}
	return nil
}

func (x *BridgeTransactionResponse) GetTransactionRequest() *TransactionRequest {
	if x != nil {
		return x.TransactionRequest
	}
	return nil
}

type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     string `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	To       string `protobuf:"bytes,2,opt,name=to,proto3" json:"to"`
	GasLimit string `protobuf:"bytes,3,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{13}
}

func (x *TransactionRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TransactionRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionRequest) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *TransactionRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BridgeTransactionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bridge         string `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge"`
	FromChain      string `protobuf:"bytes,2,opt,name=fromChain,proto3" json:"fromChain"`
	ToChain        string `protobuf:"bytes,3,opt,name=toChain,proto3" json:"toChain"`
	TxHash         string `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash"`
	BridgeProvider string `protobuf:"bytes,5,opt,name=bridge_provider,json=bridgeProvider,proto3" json:"bridge_provider"`
}

func (x *BridgeTransactionStatusRequest) Reset() {
	*x = BridgeTransactionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTransactionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTransactionStatusRequest) ProtoMessage() {}

func (x *BridgeTransactionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTransactionStatusRequest.ProtoReflect.Descriptor instead.
func (*BridgeTransactionStatusRequest) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{14}
}

func (x *BridgeTransactionStatusRequest) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *BridgeTransactionStatusRequest) GetFromChain() string {
	if x != nil {
		return x.FromChain
	}
	return ""
}

func (x *BridgeTransactionStatusRequest) GetToChain() string {
	if x != nil {
		return x.ToChain
	}
	return ""
}

func (x *BridgeTransactionStatusRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *BridgeTransactionStatusRequest) GetBridgeProvider() string {
	if x != nil {
		return x.BridgeProvider
	}
	return ""
}

type BridgeTransactionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status"`
	TxHash    string `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash"`
}

func (x *BridgeTransactionStatusResponse) Reset() {
	*x = BridgeTransactionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeTransactionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeTransactionStatusResponse) ProtoMessage() {}

func (x *BridgeTransactionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeTransactionStatusResponse.ProtoReflect.Descriptor instead.
func (*BridgeTransactionStatusResponse) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{15}
}

func (x *BridgeTransactionStatusResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *BridgeTransactionStatusResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BridgeTransactionStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BridgeTransactionStatusResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

var File_bridge_proto protoreflect.FileDescriptor

var file_bridge_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x12, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x13, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x22, 0xcf, 0x01,
	0x0a, 0x18, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22,
	0x48, 0x0a, 0x19, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0xaa,
	0x02, 0x0a, 0x12, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x13,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b,
	0x0a, 0x08, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x46, 0x65,
	0x65, 0x52, 0x09, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x46, 0x65, 0x65, 0x22, 0xac, 0x01, 0x0a,
	0x09, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x22, 0x4e, 0x0a, 0x0b, 0x54,
	0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0xeb, 0x02, 0x0a, 0x08,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x74, 0x6f, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x18, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xb2, 0x01, 0x0a,
	0x19, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x12, 0x35,
	0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x6b, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb1,
	0x01, 0x0a, 0x1e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bridge_proto_rawDescOnce sync.Once
	file_bridge_proto_rawDescData = file_bridge_proto_rawDesc
)

func file_bridge_proto_rawDescGZIP() []byte {
	file_bridge_proto_rawDescOnce.Do(func() {
		file_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_bridge_proto_rawDescData)
	})
	return file_bridge_proto_rawDescData
}

var file_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_bridge_proto_goTypes = []interface{}{
	(*BridgeChainRequest)(nil),              // 0: proto.BridgeChainRequest
	(*BridgeChainResponse)(nil),             // 1: proto.BridgeChainResponse
	(*BridgeChainInfo)(nil),                 // 2: proto.BridgeChainInfo
	(*BridgeChainTokensRequest)(nil),        // 3: proto.BridgeChainTokensRequest
	(*BridgeChainTokensResponse)(nil),       // 4: proto.BridgeChainTokensResponse
	(*BridgeTokens)(nil),                    // 5: proto.BridgeTokens
	(*BridgeQuoteRequest)(nil),              // 6: proto.BridgeQuoteRequest
	(*BridgeQuoteResponse)(nil),             // 7: proto.BridgeQuoteResponse
	(*BridgeFee)(nil),                       // 8: proto.BridgeFee
	(*ToolDetails)(nil),                     // 9: proto.ToolDetails
	(*Estimate)(nil),                        // 10: proto.Estimate
	(*BridgeTransactionRequest)(nil),        // 11: proto.BridgeTransactionRequest
	(*BridgeTransactionResponse)(nil),       // 12: proto.BridgeTransactionResponse
	(*TransactionRequest)(nil),              // 13: proto.TransactionRequest
	(*BridgeTransactionStatusRequest)(nil),  // 14: proto.BridgeTransactionStatusRequest
	(*BridgeTransactionStatusResponse)(nil), // 15: proto.BridgeTransactionStatusResponse
}
var file_bridge_proto_depIdxs = []int32{
	2,  // 0: proto.BridgeChainResponse.chains:type_name -> proto.BridgeChainInfo
	5,  // 1: proto.BridgeChainTokensResponse.tokens:type_name -> proto.BridgeTokens
	9,  // 2: proto.BridgeQuoteResponse.tool_details:type_name -> proto.ToolDetails
	10, // 3: proto.BridgeQuoteResponse.estimate:type_name -> proto.Estimate
	8,  // 4: proto.BridgeQuoteResponse.bridge_fee:type_name -> proto.BridgeFee
	9,  // 5: proto.BridgeTransactionResponse.tool_details:type_name -> proto.ToolDetails
	13, // 6: proto.BridgeTransactionResponse.transaction_request:type_name -> proto.TransactionRequest
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_bridge_proto_init() }
func file_bridge_proto_init() {
	if File_bridge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bridge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeChainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeChainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeChainTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeChainTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToolDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Estimate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTransactionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeTransactionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bridge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bridge_proto_goTypes,
		DependencyIndexes: file_bridge_proto_depIdxs,
		MessageInfos:      file_bridge_proto_msgTypes,
	}.Build()
	File_bridge_proto = out.File
	file_bridge_proto_rawDesc = nil
	file_bridge_proto_goTypes = nil
	file_bridge_proto_depIdxs = nil
}
