// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: contract.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All proto fields mentioned here will come with default response in case of absence of data
// For example, string type come with "" likewise float/double - 0.0,int64/32 -0 bool-false
type TokenPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency"`
}

func (x *TokenPriceRequest) Reset() {
	*x = TokenPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceRequest) ProtoMessage() {}

func (x *TokenPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceRequest.ProtoReflect.Descriptor instead.
func (*TokenPriceRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

func (x *TokenPriceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TokenPriceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type TokenPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price          float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price"`
	CurrencyCode   string  `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code"`
	CurrencySymbol string  `protobuf:"bytes,3,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol"`
}

func (x *TokenPriceResponse) Reset() {
	*x = TokenPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceResponse) ProtoMessage() {}

func (x *TokenPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceResponse.ProtoReflect.Descriptor instead.
func (*TokenPriceResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

func (x *TokenPriceResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TokenPriceResponse) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TokenPriceResponse) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type TokenPriceResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price          string `protobuf:"bytes,1,opt,name=price,proto3" json:"price"`
	CurrencyCode   string `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code"`
	CurrencySymbol string `protobuf:"bytes,3,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol"`
}

func (x *TokenPriceResponseV2) Reset() {
	*x = TokenPriceResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPriceResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceResponseV2) ProtoMessage() {}

func (x *TokenPriceResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceResponseV2.ProtoReflect.Descriptor instead.
func (*TokenPriceResponseV2) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

func (x *TokenPriceResponseV2) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TokenPriceResponseV2) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *TokenPriceResponseV2) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

func (x *BalanceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *BalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string          `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
	QuoteCurrency string          `protobuf:"bytes,2,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency"`
	Token         []*TokenBalance `protobuf:"bytes,3,rep,name=token,proto3" json:"token"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{4}
}

func (x *BalanceResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BalanceResponse) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *BalanceResponse) GetToken() []*TokenBalance {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName         string  `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name"`
	ContractTickerSymbol string  `protobuf:"bytes,2,opt,name=contract_ticker_symbol,json=contractTickerSymbol,proto3" json:"contract_ticker_symbol"`
	ContractDecimals     int32   `protobuf:"varint,3,opt,name=contract_decimals,json=contractDecimals,proto3" json:"contract_decimals"`
	ContractAddress      string  `protobuf:"bytes,4,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address"`
	Coin                 int64   `protobuf:"varint,5,opt,name=coin,proto3" json:"coin"`
	Balance              string  `protobuf:"bytes,6,opt,name=balance,proto3" json:"balance"`
	Quote                float64 `protobuf:"fixed64,7,opt,name=quote,proto3" json:"quote"`
	QuoteRate            float64 `protobuf:"fixed64,8,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	LogoUrl              string  `protobuf:"bytes,9,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	QuoteRate_24H        string  `protobuf:"bytes,10,opt,name=quote_rate_24h,json=quoteRate24h,proto3" json:"quote_rate_24h"`
	QuotePctChange_24H   float64 `protobuf:"fixed64,11,opt,name=quote_pct_change_24h,json=quotePctChange24h,proto3" json:"quote_pct_change_24h"`
	QuotePrice           string  `protobuf:"bytes,12,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price"`
}

func (x *TokenBalance) Reset() {
	*x = TokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalance) ProtoMessage() {}

func (x *TokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalance.ProtoReflect.Descriptor instead.
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{5}
}

func (x *TokenBalance) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *TokenBalance) GetContractTickerSymbol() string {
	if x != nil {
		return x.ContractTickerSymbol
	}
	return ""
}

func (x *TokenBalance) GetContractDecimals() int32 {
	if x != nil {
		return x.ContractDecimals
	}
	return 0
}

func (x *TokenBalance) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TokenBalance) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *TokenBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TokenBalance) GetQuote() float64 {
	if x != nil {
		return x.Quote
	}
	return 0
}

func (x *TokenBalance) GetQuoteRate() float64 {
	if x != nil {
		return x.QuoteRate
	}
	return 0
}

func (x *TokenBalance) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *TokenBalance) GetQuoteRate_24H() string {
	if x != nil {
		return x.QuoteRate_24H
	}
	return ""
}

func (x *TokenBalance) GetQuotePctChange_24H() float64 {
	if x != nil {
		return x.QuotePctChange_24H
	}
	return 0
}

func (x *TokenBalance) GetQuotePrice() string {
	if x != nil {
		return x.QuotePrice
	}
	return ""
}

type ProcessingFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain          string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	GasPrice       bool   `protobuf:"varint,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price"`
	TransactionFee bool   `protobuf:"varint,4,opt,name=transaction_fee,json=transactionFee,proto3" json:"transaction_fee"`
}

func (x *ProcessingFeeRequest) Reset() {
	*x = ProcessingFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingFeeRequest) ProtoMessage() {}

func (x *ProcessingFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingFeeRequest.ProtoReflect.Descriptor instead.
func (*ProcessingFeeRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessingFeeRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *ProcessingFeeRequest) GetGasPrice() bool {
	if x != nil {
		return x.GasPrice
	}
	return false
}

func (x *ProcessingFeeRequest) GetTransactionFee() bool {
	if x != nil {
		return x.TransactionFee
	}
	return false
}

type ProcessingFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value"`
}

func (x *ProcessingFeeResponse) Reset() {
	*x = ProcessingFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingFeeResponse) ProtoMessage() {}

func (x *ProcessingFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingFeeResponse.ProtoReflect.Descriptor instead.
func (*ProcessingFeeResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessingFeeResponse) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type NonceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
}

func (x *NonceRequest) Reset() {
	*x = NonceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceRequest) ProtoMessage() {}

func (x *NonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceRequest.ProtoReflect.Descriptor instead.
func (*NonceRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{8}
}

func (x *NonceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *NonceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      int64         `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce"`
	QuoteValue float64       `protobuf:"fixed64,2,opt,name=quote_value,json=quoteValue,proto3" json:"quote_value"`
	OpL1Fee    float64       `protobuf:"fixed64,3,opt,name=op_l1_fee,json=opL1Fee,proto3" json:"op_l1_fee"`
	GasPrice   *GasPriceInfo `protobuf:"bytes,4,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price"`
}

func (x *NonceResponse) Reset() {
	*x = NonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceResponse) ProtoMessage() {}

func (x *NonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceResponse.ProtoReflect.Descriptor instead.
func (*NonceResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{9}
}

func (x *NonceResponse) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *NonceResponse) GetQuoteValue() float64 {
	if x != nil {
		return x.QuoteValue
	}
	return 0
}

func (x *NonceResponse) GetOpL1Fee() float64 {
	if x != nil {
		return x.OpL1Fee
	}
	return 0
}

func (x *NonceResponse) GetGasPrice() *GasPriceInfo {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type GasPriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fast        float64 `protobuf:"fixed64,1,opt,name=fast,proto3" json:"fast"`
	SafeLow     float64 `protobuf:"fixed64,2,opt,name=safe_low,json=safeLow,proto3" json:"safe_low"`
	Fastest     float64 `protobuf:"fixed64,3,opt,name=fastest,proto3" json:"fastest"`
	Average     float64 `protobuf:"fixed64,4,opt,name=average,proto3" json:"average"`
	SafeLowWait int64   `protobuf:"varint,5,opt,name=safe_low_wait,json=safeLowWait,proto3" json:"safe_low_wait"`
	AvgWait     int64   `protobuf:"varint,6,opt,name=avg_wait,json=avgWait,proto3" json:"avg_wait"`
	FastWait    int64   `protobuf:"varint,7,opt,name=fast_wait,json=fastWait,proto3" json:"fast_wait"`
	FastestWait float64 `protobuf:"fixed64,8,opt,name=fastest_wait,json=fastestWait,proto3" json:"fastest_wait"`
}

func (x *GasPriceInfo) Reset() {
	*x = GasPriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasPriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceInfo) ProtoMessage() {}

func (x *GasPriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceInfo.ProtoReflect.Descriptor instead.
func (*GasPriceInfo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{10}
}

func (x *GasPriceInfo) GetFast() float64 {
	if x != nil {
		return x.Fast
	}
	return 0
}

func (x *GasPriceInfo) GetSafeLow() float64 {
	if x != nil {
		return x.SafeLow
	}
	return 0
}

func (x *GasPriceInfo) GetFastest() float64 {
	if x != nil {
		return x.Fastest
	}
	return 0
}

func (x *GasPriceInfo) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *GasPriceInfo) GetSafeLowWait() int64 {
	if x != nil {
		return x.SafeLowWait
	}
	return 0
}

func (x *GasPriceInfo) GetAvgWait() int64 {
	if x != nil {
		return x.AvgWait
	}
	return 0
}

func (x *GasPriceInfo) GetFastWait() int64 {
	if x != nil {
		return x.FastWait
	}
	return 0
}

func (x *GasPriceInfo) GetFastestWait() float64 {
	if x != nil {
		return x.FastestWait
	}
	return 0
}

type SendTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{11}
}

func (x *SendTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SendTransactionRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SendTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
}

func (x *SendTransactionResponse) Reset() {
	*x = SendTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResponse) ProtoMessage() {}

func (x *SendTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{12}
}

func (x *SendTransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	From                string             `protobuf:"bytes,2,opt,name=from,proto3" json:"from"`
	To                  string             `protobuf:"bytes,3,opt,name=to,proto3" json:"to"`
	Fee                 string             `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee"`
	Date                int64              `protobuf:"varint,5,opt,name=date,proto3" json:"date"`
	Status              string             `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Type                string             `protobuf:"bytes,7,opt,name=type,proto3" json:"type"`
	Block               int64              `protobuf:"varint,8,opt,name=block,proto3" json:"block"`
	Value               string             `protobuf:"bytes,9,opt,name=value,proto3" json:"value"`
	Nonce               int64              `protobuf:"varint,10,opt,name=nonce,proto3" json:"nonce"`
	NativeTokenDecimals int64              `protobuf:"varint,11,opt,name=native_token_decimals,json=nativeTokenDecimals,proto3" json:"native_token_decimals"`
	Description         string             `protobuf:"bytes,12,opt,name=description,proto3" json:"description"`
	Sent                []*TransactionInfo `protobuf:"bytes,13,rep,name=sent,proto3" json:"sent"`         //Returns empty array when data not found
	Received            []*TransactionInfo `protobuf:"bytes,14,rep,name=received,proto3" json:"received"` //Returns empty array when data not found
	Others              []*TransactionInfo `protobuf:"bytes,15,rep,name=others,proto3" json:"others"`     //Returns empty array when data not found
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{13}
}

func (x *TransactionData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionData) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionData) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *TransactionData) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *TransactionData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionData) GetBlock() int64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *TransactionData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TransactionData) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionData) GetNativeTokenDecimals() int64 {
	if x != nil {
		return x.NativeTokenDecimals
	}
	return 0
}

func (x *TransactionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionData) GetSent() []*TransactionInfo {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *TransactionData) GetReceived() []*TransactionInfo {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *TransactionData) GetOthers() []*TransactionInfo {
	if x != nil {
		return x.Others
	}
	return nil
}

type ListTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain                string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address              string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	Testnet              bool   `protobuf:"varint,3,opt,name=testnet,proto3" json:"testnet"` //Currently testnet is not supported
	Page                 string `protobuf:"bytes,4,opt,name=page,proto3" json:"page"`
	PageSize             string `protobuf:"bytes,5,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	TokenContractAddress string `protobuf:"bytes,6,opt,name=token_contract_address,json=tokenContractAddress,proto3" json:"token_contract_address"`
}

func (x *ListTransactionRequest) Reset() {
	*x = ListTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionRequest) ProtoMessage() {}

func (x *ListTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{14}
}

func (x *ListTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *ListTransactionRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListTransactionRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

func (x *ListTransactionRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ListTransactionRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *ListTransactionRequest) GetTokenContractAddress() string {
	if x != nil {
		return x.TokenContractAddress
	}
	return ""
}

type ListTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int64              `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	TotalPages   int64              `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	ItemsOnPage  int64              `protobuf:"varint,3,opt,name=items_on_page,json=itemsOnPage,proto3" json:"items_on_page"`
	TotalTxs     int64              `protobuf:"varint,4,opt,name=total_txs,json=totalTxs,proto3" json:"total_txs"`
	Transactions []*TransactionData `protobuf:"bytes,5,rep,name=transactions,proto3" json:"transactions"` //Returns empty array when data not found
}

func (x *ListTransactionResponse) Reset() {
	*x = ListTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionResponse) ProtoMessage() {}

func (x *ListTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{15}
}

func (x *ListTransactionResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTransactionResponse) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ListTransactionResponse) GetItemsOnPage() int64 {
	if x != nil {
		return x.ItemsOnPage
	}
	return 0
}

func (x *ListTransactionResponse) GetTotalTxs() int64 {
	if x != nil {
		return x.TotalTxs
	}
	return 0
}

func (x *ListTransactionResponse) GetTransactions() []*TransactionData {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain         string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	Testnet       bool   `protobuf:"varint,3,opt,name=testnet,proto3" json:"testnet"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{16}
}

func (x *GetTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GetTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetTransactionRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol"`
	TokenId  string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id"`
	Decimals int64  `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals"`
	Value    string `protobuf:"bytes,5,opt,name=value,proto3" json:"value"`
	// float quote = 6; //Optional field //TODO: Add support pending
	QuoteRate float32 `protobuf:"fixed32,6,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"` //Optional field
	LogoUrl   string  `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	From      string  `protobuf:"bytes,8,opt,name=from,proto3" json:"from"`
	To        string  `protobuf:"bytes,9,opt,name=to,proto3" json:"to"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{17}
}

func (x *TransactionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransactionInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransactionInfo) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *TransactionInfo) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TransactionInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TransactionInfo) GetQuoteRate() float32 {
	if x != nil {
		return x.QuoteRate
	}
	return 0
}

func (x *TransactionInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *TransactionInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type ValidatorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description"`
	Apr              string `protobuf:"bytes,3,opt,name=apr,proto3" json:"apr"`
	LogoUrl          string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	ValidatorAddress string `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address"`
}

func (x *ValidatorDetails) Reset() {
	*x = ValidatorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorDetails) ProtoMessage() {}

func (x *ValidatorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorDetails.ProtoReflect.Descriptor instead.
func (*ValidatorDetails) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{18}
}

func (x *ValidatorDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidatorDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ValidatorDetails) GetApr() string {
	if x != nil {
		return x.Apr
	}
	return ""
}

func (x *ValidatorDetails) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ValidatorDetails) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	From                string              `protobuf:"bytes,2,opt,name=from,proto3" json:"from"`
	To                  string              `protobuf:"bytes,3,opt,name=to,proto3" json:"to"`
	Fee                 string              `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee"`
	Date                int64               `protobuf:"varint,5,opt,name=date,proto3" json:"date"`
	Status              string              `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Type                string              `protobuf:"bytes,7,opt,name=type,proto3" json:"type"`
	Block               int64               `protobuf:"varint,8,opt,name=block,proto3" json:"block"`
	Value               string              `protobuf:"bytes,9,opt,name=value,proto3" json:"value"`
	Nonce               int64               `protobuf:"varint,10,opt,name=nonce,proto3" json:"nonce"`
	NativeTokenDecimals int64               `protobuf:"varint,11,opt,name=native_token_decimals,json=nativeTokenDecimals,proto3" json:"native_token_decimals"`
	Description         string              `protobuf:"bytes,12,opt,name=description,proto3" json:"description"`
	ExplorerLink        string              `protobuf:"bytes,13,opt,name=explorer_link,json=explorerLink,proto3" json:"explorer_link"`
	Sent                []*TransactionInfo  `protobuf:"bytes,14,rep,name=sent,proto3" json:"sent"`                                                 //Returns empty array when data not found
	Received            []*TransactionInfo  `protobuf:"bytes,15,rep,name=received,proto3" json:"received"`                                         //Returns empty array when data not found
	ValidatorDetails    []*ValidatorDetails `protobuf:"bytes,16,rep,name=validator_details,json=validatorDetails,proto3" json:"validator_details"` //Returns empty array when data not found
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{19}
}

func (x *GetTransactionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTransactionResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetTransactionResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetTransactionResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *GetTransactionResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *GetTransactionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTransactionResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTransactionResponse) GetBlock() int64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *GetTransactionResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetTransactionResponse) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetTransactionResponse) GetNativeTokenDecimals() int64 {
	if x != nil {
		return x.NativeTokenDecimals
	}
	return 0
}

func (x *GetTransactionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTransactionResponse) GetExplorerLink() string {
	if x != nil {
		return x.ExplorerLink
	}
	return ""
}

func (x *GetTransactionResponse) GetSent() []*TransactionInfo {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *GetTransactionResponse) GetReceived() []*TransactionInfo {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *GetTransactionResponse) GetValidatorDetails() []*ValidatorDetails {
	if x != nil {
		return x.ValidatorDetails
	}
	return nil
}

type GasLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from"`
	To       string `protobuf:"bytes,3,opt,name=to,proto3" json:"to"`
	Gas      int64  `protobuf:"varint,4,opt,name=gas,proto3" json:"gas"`
	GasPrice int64  `protobuf:"varint,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price"`
	Value    int64  `protobuf:"varint,6,opt,name=value,proto3" json:"value"`
	Data     string `protobuf:"bytes,7,opt,name=data,proto3" json:"data"`
}

func (x *GasLimitRequest) Reset() {
	*x = GasLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasLimitRequest) ProtoMessage() {}

func (x *GasLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasLimitRequest.ProtoReflect.Descriptor instead.
func (*GasLimitRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{20}
}

func (x *GasLimitRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *GasLimitRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GasLimitRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GasLimitRequest) GetGas() int64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *GasLimitRequest) GetGasPrice() int64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *GasLimitRequest) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *GasLimitRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GasLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasLimit  int64  `protobuf:"varint,1,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit"`
	InputData string `protobuf:"bytes,2,opt,name=input_data,json=inputData,proto3" json:"input_data"`
}

func (x *GasLimitResponse) Reset() {
	*x = GasLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasLimitResponse) ProtoMessage() {}

func (x *GasLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasLimitResponse.ProtoReflect.Descriptor instead.
func (*GasLimitResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{21}
}

func (x *GasLimitResponse) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *GasLimitResponse) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

type TxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain  string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash"`
}

func (x *TxStatusRequest) Reset() {
	*x = TxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStatusRequest) ProtoMessage() {}

func (x *TxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStatusRequest.ProtoReflect.Descriptor instead.
func (*TxStatusRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{22}
}

func (x *TxStatusRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TxStatusRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed          bool     `protobuf:"varint,1,opt,name=removed,proto3" json:"removed"`
	LogIndex         int64    `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index"`
	TransactionIndex int64    `protobuf:"varint,3,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index"`
	TransactionHash  string   `protobuf:"bytes,4,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash"`
	BlockNumber      int64    `protobuf:"varint,5,opt,name=block_number,json=blockNumber,proto3" json:"block_number"`
	BlockHash        string   `protobuf:"bytes,6,opt,name=block_hash,json=blockHash,proto3" json:"block_hash"`
	Address          string   `protobuf:"bytes,7,opt,name=address,proto3" json:"address"`
	Data             string   `protobuf:"bytes,8,opt,name=data,proto3" json:"data"`
	Topics           []string `protobuf:"bytes,9,rep,name=topics,proto3" json:"topics"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{23}
}

func (x *Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *Log) GetLogIndex() int64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Log) GetTransactionIndex() int64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *Log) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *Log) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Log) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Log) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Log) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Log) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type TxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash   string `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash"`
	TransactionIndex  int64  `protobuf:"varint,2,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index"`
	BlockHash         string `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash"`
	BlockNumber       int64  `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number"`
	CumulativeGasUsed int64  `protobuf:"varint,5,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used"`
	GasUsed           int64  `protobuf:"varint,6,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used"`
	ContractAddress   string `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address"`
	Logs              []*Log `protobuf:"bytes,8,rep,name=logs,proto3" json:"logs"` //Returns empty array when data not found
	LogsBloom         string `protobuf:"bytes,9,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom"`
	Root              string `protobuf:"bytes,10,opt,name=root,proto3" json:"root"`
	Status            string `protobuf:"bytes,11,opt,name=status,proto3" json:"status"`
}

func (x *TxStatusResponse) Reset() {
	*x = TxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStatusResponse) ProtoMessage() {}

func (x *TxStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStatusResponse.ProtoReflect.Descriptor instead.
func (*TxStatusResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{24}
}

func (x *TxStatusResponse) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *TxStatusResponse) GetTransactionIndex() int64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *TxStatusResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *TxStatusResponse) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TxStatusResponse) GetCumulativeGasUsed() int64 {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return 0
}

func (x *TxStatusResponse) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *TxStatusResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TxStatusResponse) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *TxStatusResponse) GetLogsBloom() string {
	if x != nil {
		return x.LogsBloom
	}
	return ""
}

func (x *TxStatusResponse) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *TxStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TokenDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain           string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address"`
}

func (x *TokenDetailRequest) Reset() {
	*x = TokenDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDetailRequest) ProtoMessage() {}

func (x *TokenDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDetailRequest.ProtoReflect.Descriptor instead.
func (*TokenDetailRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{25}
}

func (x *TokenDetailRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *TokenDetailRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type TokenDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName         string `protobuf:"bytes,1,opt,name=token_name,json=tokenName,proto3" json:"token_name"`
	TokenSymbol       string `protobuf:"bytes,2,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol"`
	TokenDecimals     string `protobuf:"bytes,3,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals"`
	TokenAddress      string `protobuf:"bytes,4,opt,name=token_address,json=tokenAddress,proto3" json:"token_address"`
	TokenLogoUrl      string `protobuf:"bytes,5,opt,name=token_logo_url,json=tokenLogoUrl,proto3" json:"token_logo_url"`
	TokenListedCount  string `protobuf:"bytes,6,opt,name=token_listed_count,json=tokenListedCount,proto3" json:"token_listed_count"`
	TokenPrice        string `protobuf:"bytes,7,opt,name=token_price,json=tokenPrice,proto3" json:"token_price"`
	TokenLastActivity string `protobuf:"bytes,8,opt,name=token_last_activity,json=tokenLastActivity,proto3" json:"token_last_activity"`
	TokenWebsite      string `protobuf:"bytes,9,opt,name=token_website,json=tokenWebsite,proto3" json:"token_website"`
	TokenTradeVolume  string `protobuf:"bytes,10,opt,name=token_trade_volume,json=tokenTradeVolume,proto3" json:"token_trade_volume"`
	LogoUrl           string `protobuf:"bytes,11,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
}

func (x *TokenDetailResponse) Reset() {
	*x = TokenDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDetailResponse) ProtoMessage() {}

func (x *TokenDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDetailResponse.ProtoReflect.Descriptor instead.
func (*TokenDetailResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{26}
}

func (x *TokenDetailResponse) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenDecimals() string {
	if x != nil {
		return x.TokenDecimals
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenLogoUrl() string {
	if x != nil {
		return x.TokenLogoUrl
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenListedCount() string {
	if x != nil {
		return x.TokenListedCount
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenPrice() string {
	if x != nil {
		return x.TokenPrice
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenLastActivity() string {
	if x != nil {
		return x.TokenLastActivity
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenWebsite() string {
	if x != nil {
		return x.TokenWebsite
	}
	return ""
}

func (x *TokenDetailResponse) GetTokenTradeVolume() string {
	if x != nil {
		return x.TokenTradeVolume
	}
	return ""
}

func (x *TokenDetailResponse) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

type TokenInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	Range string `protobuf:"bytes,2,opt,name=range,proto3" json:"range"`
	Chain string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain"`
}

func (x *TokenInfoRequest) Reset() {
	*x = TokenInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoRequest) ProtoMessage() {}

func (x *TokenInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoRequest.ProtoReflect.Descriptor instead.
func (*TokenInfoRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{27}
}

func (x *TokenInfoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenInfoRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *TokenInfoRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type TokenInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	Chart   string `protobuf:"bytes,2,opt,name=chart,proto3" json:"chart"`
	Utility string `protobuf:"bytes,3,opt,name=utility,proto3" json:"utility"`
}

func (x *TokenInfoResponse) Reset() {
	*x = TokenInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoResponse) ProtoMessage() {}

func (x *TokenInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoResponse.ProtoReflect.Descriptor instead.
func (*TokenInfoResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{28}
}

func (x *TokenInfoResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenInfoResponse) GetChart() string {
	if x != nil {
		return x.Chart
	}
	return ""
}

func (x *TokenInfoResponse) GetUtility() string {
	if x != nil {
		return x.Utility
	}
	return ""
}

type AllowanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Contract string `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract"`
	Owner    string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner"`
	Spender  string `protobuf:"bytes,4,opt,name=spender,proto3" json:"spender"`
}

func (x *AllowanceRequest) Reset() {
	*x = AllowanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowanceRequest) ProtoMessage() {}

func (x *AllowanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowanceRequest.ProtoReflect.Descriptor instead.
func (*AllowanceRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{29}
}

func (x *AllowanceRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *AllowanceRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *AllowanceRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AllowanceRequest) GetSpender() string {
	if x != nil {
		return x.Spender
	}
	return ""
}

type AllowanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowance string `protobuf:"bytes,1,opt,name=allowance,proto3" json:"allowance"`
}

func (x *AllowanceResponse) Reset() {
	*x = AllowanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowanceResponse) ProtoMessage() {}

func (x *AllowanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowanceResponse.ProtoReflect.Descriptor instead.
func (*AllowanceResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{30}
}

func (x *AllowanceResponse) GetAllowance() string {
	if x != nil {
		return x.Allowance
	}
	return ""
}

type BulkAllowanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*AllowanceResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response"`
}

func (x *BulkAllowanceResponse) Reset() {
	*x = BulkAllowanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAllowanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAllowanceResponse) ProtoMessage() {}

func (x *BulkAllowanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAllowanceResponse.ProtoReflect.Descriptor instead.
func (*BulkAllowanceResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{31}
}

func (x *BulkAllowanceResponse) GetResponse() []*AllowanceResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ApprovalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token"`
	Chain  string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain"`
}

func (x *ApprovalRequest) Reset() {
	*x = ApprovalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRequest) ProtoMessage() {}

func (x *ApprovalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRequest.ProtoReflect.Descriptor instead.
func (*ApprovalRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{32}
}

func (x *ApprovalRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *ApprovalRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ApprovalRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type AllowanceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract    string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner"`
	Spender     string `protobuf:"bytes,3,opt,name=spender,proto3" json:"spender"`
	Amount      string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount"`
	EncodedData string `protobuf:"bytes,5,opt,name=encoded_data,json=encodedData,proto3" json:"encoded_data"`
}

func (x *AllowanceParams) Reset() {
	*x = AllowanceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowanceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowanceParams) ProtoMessage() {}

func (x *AllowanceParams) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowanceParams.ProtoReflect.Descriptor instead.
func (*AllowanceParams) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{33}
}

func (x *AllowanceParams) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *AllowanceParams) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AllowanceParams) GetSpender() string {
	if x != nil {
		return x.Spender
	}
	return ""
}

func (x *AllowanceParams) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AllowanceParams) GetEncodedData() string {
	if x != nil {
		return x.EncodedData
	}
	return ""
}

type ApprovalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To       string `protobuf:"bytes,1,opt,name=to,proto3" json:"to"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	Data     string `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	GasLimit string `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit"`
	TxLink   string `protobuf:"bytes,5,opt,name=tx_link,json=txLink,proto3" json:"tx_link"`
}

func (x *ApprovalResponse) Reset() {
	*x = ApprovalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalResponse) ProtoMessage() {}

func (x *ApprovalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalResponse.ProtoReflect.Descriptor instead.
func (*ApprovalResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{34}
}

func (x *ApprovalResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ApprovalResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ApprovalResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ApprovalResponse) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *ApprovalResponse) GetTxLink() string {
	if x != nil {
		return x.TxLink
	}
	return ""
}

type BulkApprovalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*ApprovalResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response"`
}

func (x *BulkApprovalResponse) Reset() {
	*x = BulkApprovalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkApprovalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkApprovalResponse) ProtoMessage() {}

func (x *BulkApprovalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkApprovalResponse.ProtoReflect.Descriptor instead.
func (*BulkApprovalResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{35}
}

func (x *BulkApprovalResponse) GetResponse() []*ApprovalResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UserDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract"`
}

func (x *UserDataRequest) Reset() {
	*x = UserDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataRequest) ProtoMessage() {}

func (x *UserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataRequest.ProtoReflect.Descriptor instead.
func (*UserDataRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{36}
}

func (x *UserDataRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *UserDataRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserDataRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type UserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteRate              float64 `protobuf:"fixed64,1,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	TotalFeesPaid          float64 `protobuf:"fixed64,2,opt,name=total_fees_paid,json=totalFeesPaid,proto3" json:"total_fees_paid"`
	TotalFeesPaidUsd       float64 `protobuf:"fixed64,3,opt,name=total_fees_paid_usd,json=totalFeesPaidUsd,proto3" json:"total_fees_paid_usd"`
	AverageTokenPrice      float64 `protobuf:"fixed64,4,opt,name=average_token_price,json=averageTokenPrice,proto3" json:"average_token_price"`
	OverallProfitLoss      float64 `protobuf:"fixed64,5,opt,name=overall_profit_loss,json=overallProfitLoss,proto3" json:"overall_profit_loss"`
	CurrentHoldingQuantity float64 `protobuf:"fixed64,6,opt,name=current_holding_quantity,json=currentHoldingQuantity,proto3" json:"current_holding_quantity"`
	PercentageChange_24H   float64 `protobuf:"fixed64,7,opt,name=percentage_change_24H,json=percentageChange24H,proto3" json:"percentage_change_24H"`
	PriceChange_24H        float64 `protobuf:"fixed64,8,opt,name=price_change_24H,json=priceChange24H,proto3" json:"price_change_24H"`
}

func (x *UserDataResponse) Reset() {
	*x = UserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataResponse) ProtoMessage() {}

func (x *UserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataResponse.ProtoReflect.Descriptor instead.
func (*UserDataResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{37}
}

func (x *UserDataResponse) GetQuoteRate() float64 {
	if x != nil {
		return x.QuoteRate
	}
	return 0
}

func (x *UserDataResponse) GetTotalFeesPaid() float64 {
	if x != nil {
		return x.TotalFeesPaid
	}
	return 0
}

func (x *UserDataResponse) GetTotalFeesPaidUsd() float64 {
	if x != nil {
		return x.TotalFeesPaidUsd
	}
	return 0
}

func (x *UserDataResponse) GetAverageTokenPrice() float64 {
	if x != nil {
		return x.AverageTokenPrice
	}
	return 0
}

func (x *UserDataResponse) GetOverallProfitLoss() float64 {
	if x != nil {
		return x.OverallProfitLoss
	}
	return 0
}

func (x *UserDataResponse) GetCurrentHoldingQuantity() float64 {
	if x != nil {
		return x.CurrentHoldingQuantity
	}
	return 0
}

func (x *UserDataResponse) GetPercentageChange_24H() float64 {
	if x != nil {
		return x.PercentageChange_24H
	}
	return 0
}

func (x *UserDataResponse) GetPriceChange_24H() float64 {
	if x != nil {
		return x.PriceChange_24H
	}
	return 0
}

type ENSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain"`
}

func (x *ENSRequest) Reset() {
	*x = ENSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENSRequest) ProtoMessage() {}

func (x *ENSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENSRequest.ProtoReflect.Descriptor instead.
func (*ENSRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{38}
}

func (x *ENSRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ENSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
}

func (x *ENSResponse) Reset() {
	*x = ENSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENSResponse) ProtoMessage() {}

func (x *ENSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENSResponse.ProtoReflect.Descriptor instead.
func (*ENSResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{39}
}

func (x *ENSResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NftCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address"`
	Page     string `protobuf:"bytes,2,opt,name=Page,proto3" json:"Page"`
	PageSize string `protobuf:"bytes,3,opt,name=PageSize,proto3" json:"PageSize"`
	Chain    string `protobuf:"bytes,4,opt,name=Chain,proto3" json:"Chain"`
}

func (x *NftCollectionRequest) Reset() {
	*x = NftCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftCollectionRequest) ProtoMessage() {}

func (x *NftCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftCollectionRequest.ProtoReflect.Descriptor instead.
func (*NftCollectionRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{40}
}

func (x *NftCollectionRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NftCollectionRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *NftCollectionRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *NftCollectionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type NftCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerImageUrl              string          `protobuf:"bytes,1,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`
	ChatUrl                     string          `protobuf:"bytes,2,opt,name=chat_url,json=chatUrl,proto3" json:"chat_url"`
	CreatedDate                 string          `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date"`
	DefaultToFiat               bool            `protobuf:"varint,4,opt,name=default_to_fiat,json=defaultToFiat,proto3" json:"default_to_fiat"`
	Description                 string          `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	DevBuyerFeeBasisPoints      string          `protobuf:"bytes,6,opt,name=dev_buyer_fee_basis_points,json=devBuyerFeeBasisPoints,proto3" json:"dev_buyer_fee_basis_points"`
	DevSellerFeeBasisPoints     string          `protobuf:"bytes,7,opt,name=dev_seller_fee_basis_points,json=devSellerFeeBasisPoints,proto3" json:"dev_seller_fee_basis_points"`
	DiscordUrl                  string          `protobuf:"bytes,8,opt,name=discord_url,json=discordUrl,proto3" json:"discord_url"`
	DisplayData                 *NFTDisplayData `protobuf:"bytes,9,opt,name=display_data,json=displayData,proto3" json:"display_data"`
	ExternalUrl                 string          `protobuf:"bytes,10,opt,name=external_url,json=externalUrl,proto3" json:"external_url"`
	Featured                    bool            `protobuf:"varint,11,opt,name=featured,proto3" json:"featured"`
	FeaturedImageUrl            string          `protobuf:"bytes,12,opt,name=featured_image_url,json=featuredImageUrl,proto3" json:"featured_image_url"`
	Hidden                      bool            `protobuf:"varint,13,opt,name=hidden,proto3" json:"hidden"`
	SafelistRequestStatus       string          `protobuf:"bytes,14,opt,name=safelist_request_status,json=safelistRequestStatus,proto3" json:"safelist_request_status"`
	ImageUrl                    string          `protobuf:"bytes,15,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	IsSubjectToWhitelist        bool            `protobuf:"varint,16,opt,name=is_subject_to_whitelist,json=isSubjectToWhitelist,proto3" json:"is_subject_to_whitelist"`
	LargeImageUrl               string          `protobuf:"bytes,17,opt,name=large_image_url,json=largeImageUrl,proto3" json:"large_image_url"`
	MediumUsername              string          `protobuf:"bytes,18,opt,name=medium_username,json=mediumUsername,proto3" json:"medium_username"`
	Name                        string          `protobuf:"bytes,19,opt,name=name,proto3" json:"name"`
	OnlyProxiedTransfers        bool            `protobuf:"varint,20,opt,name=only_proxied_transfers,json=onlyProxiedTransfers,proto3" json:"only_proxied_transfers"`
	OpenseaBuyerFeeBasisPoints  string          `protobuf:"bytes,21,opt,name=opensea_buyer_fee_basis_points,json=openseaBuyerFeeBasisPoints,proto3" json:"opensea_buyer_fee_basis_points"`
	OpenseaSellerFeeBasisPoints string          `protobuf:"bytes,22,opt,name=opensea_seller_fee_basis_points,json=openseaSellerFeeBasisPoints,proto3" json:"opensea_seller_fee_basis_points"`
	PayoutAddress               string          `protobuf:"bytes,23,opt,name=payout_address,json=payoutAddress,proto3" json:"payout_address"`
	RequireEmail                bool            `protobuf:"varint,24,opt,name=require_email,json=requireEmail,proto3" json:"require_email"`
	ShortDescription            string          `protobuf:"bytes,25,opt,name=short_description,json=shortDescription,proto3" json:"short_description"`
	Slug                        string          `protobuf:"bytes,26,opt,name=slug,proto3" json:"slug"`
	TelegramUrl                 string          `protobuf:"bytes,27,opt,name=telegram_url,json=telegramUrl,proto3" json:"telegram_url"`
	TwitterUsername             string          `protobuf:"bytes,28,opt,name=twitter_username,json=twitterUsername,proto3" json:"twitter_username"`
	InstagramUsername           string          `protobuf:"bytes,29,opt,name=InstagramUsername,proto3" json:"InstagramUsername"`
	WikiUrl                     string          `protobuf:"bytes,30,opt,name=wiki_url,json=wikiUrl,proto3" json:"wiki_url"`
	IsNsfw                      bool            `protobuf:"varint,31,opt,name=is_nsfw,json=isNsfw,proto3" json:"is_nsfw"`
	NftData                     []*NftData      `protobuf:"bytes,32,rep,name=nft_data,json=nftData,proto3" json:"nft_data"`
}

func (x *NftCollectionResponse) Reset() {
	*x = NftCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftCollectionResponse) ProtoMessage() {}

func (x *NftCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftCollectionResponse.ProtoReflect.Descriptor instead.
func (*NftCollectionResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{41}
}

func (x *NftCollectionResponse) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetChatUrl() string {
	if x != nil {
		return x.ChatUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *NftCollectionResponse) GetDefaultToFiat() bool {
	if x != nil {
		return x.DefaultToFiat
	}
	return false
}

func (x *NftCollectionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NftCollectionResponse) GetDevBuyerFeeBasisPoints() string {
	if x != nil {
		return x.DevBuyerFeeBasisPoints
	}
	return ""
}

func (x *NftCollectionResponse) GetDevSellerFeeBasisPoints() string {
	if x != nil {
		return x.DevSellerFeeBasisPoints
	}
	return ""
}

func (x *NftCollectionResponse) GetDiscordUrl() string {
	if x != nil {
		return x.DiscordUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetDisplayData() *NFTDisplayData {
	if x != nil {
		return x.DisplayData
	}
	return nil
}

func (x *NftCollectionResponse) GetExternalUrl() string {
	if x != nil {
		return x.ExternalUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetFeatured() bool {
	if x != nil {
		return x.Featured
	}
	return false
}

func (x *NftCollectionResponse) GetFeaturedImageUrl() string {
	if x != nil {
		return x.FeaturedImageUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *NftCollectionResponse) GetSafelistRequestStatus() string {
	if x != nil {
		return x.SafelistRequestStatus
	}
	return ""
}

func (x *NftCollectionResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetIsSubjectToWhitelist() bool {
	if x != nil {
		return x.IsSubjectToWhitelist
	}
	return false
}

func (x *NftCollectionResponse) GetLargeImageUrl() string {
	if x != nil {
		return x.LargeImageUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetMediumUsername() string {
	if x != nil {
		return x.MediumUsername
	}
	return ""
}

func (x *NftCollectionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NftCollectionResponse) GetOnlyProxiedTransfers() bool {
	if x != nil {
		return x.OnlyProxiedTransfers
	}
	return false
}

func (x *NftCollectionResponse) GetOpenseaBuyerFeeBasisPoints() string {
	if x != nil {
		return x.OpenseaBuyerFeeBasisPoints
	}
	return ""
}

func (x *NftCollectionResponse) GetOpenseaSellerFeeBasisPoints() string {
	if x != nil {
		return x.OpenseaSellerFeeBasisPoints
	}
	return ""
}

func (x *NftCollectionResponse) GetPayoutAddress() string {
	if x != nil {
		return x.PayoutAddress
	}
	return ""
}

func (x *NftCollectionResponse) GetRequireEmail() bool {
	if x != nil {
		return x.RequireEmail
	}
	return false
}

func (x *NftCollectionResponse) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *NftCollectionResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *NftCollectionResponse) GetTelegramUrl() string {
	if x != nil {
		return x.TelegramUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetTwitterUsername() string {
	if x != nil {
		return x.TwitterUsername
	}
	return ""
}

func (x *NftCollectionResponse) GetInstagramUsername() string {
	if x != nil {
		return x.InstagramUsername
	}
	return ""
}

func (x *NftCollectionResponse) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *NftCollectionResponse) GetIsNsfw() bool {
	if x != nil {
		return x.IsNsfw
	}
	return false
}

func (x *NftCollectionResponse) GetNftData() []*NftData {
	if x != nil {
		return x.NftData
	}
	return nil
}

type NftData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	NumSales                int64                 `protobuf:"varint,2,opt,name=num_sales,json=numSales,proto3" json:"num_sales"`
	BackgroundColor         string                `protobuf:"bytes,3,opt,name=background_color,json=backgroundColor,proto3" json:"background_color"`
	ImageUrl                string                `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	ImagePreviewUrl         string                `protobuf:"bytes,5,opt,name=image_preview_url,json=imagePreviewUrl,proto3" json:"image_preview_url"`
	ImageThumbnailUrl       string                `protobuf:"bytes,6,opt,name=image_thumbnail_url,json=imageThumbnailUrl,proto3" json:"image_thumbnail_url"`
	ImageOriginalUrl        string                `protobuf:"bytes,7,opt,name=image_original_url,json=imageOriginalUrl,proto3" json:"image_original_url"`
	AnimationUrl            string                `protobuf:"bytes,8,opt,name=animation_url,json=animationUrl,proto3" json:"animation_url"`
	AnimationOriginalUrl    string                `protobuf:"bytes,9,opt,name=animation_original_url,json=animationOriginalUrl,proto3" json:"animation_original_url"`
	Name                    string                `protobuf:"bytes,10,opt,name=name,proto3" json:"name"`
	Description             string                `protobuf:"bytes,11,opt,name=description,proto3" json:"description"`
	ExternalLink            string                `protobuf:"bytes,12,opt,name=external_link,json=externalLink,proto3" json:"external_link"`
	AssetContract           *NftDataAssetContract `protobuf:"bytes,13,opt,name=asset_contract,json=assetContract,proto3" json:"asset_contract"`
	Permalink               string                `protobuf:"bytes,14,opt,name=permalink,proto3" json:"permalink"`
	Decimals                string                `protobuf:"bytes,15,opt,name=decimals,proto3" json:"decimals"`
	TokenMetadata           string                `protobuf:"bytes,16,opt,name=token_metadata,json=tokenMetadata,proto3" json:"token_metadata"`
	IsNsfw                  bool                  `protobuf:"varint,17,opt,name=is_nsfw,json=isNsfw,proto3" json:"is_nsfw"`
	Owner                   *NftDataOwner         `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner"`
	SellOrders              []*NftDataSellOrders  `protobuf:"bytes,19,rep,name=sell_orders,json=sellOrders,proto3" json:"sell_orders"`
	SeaportSellOrders       string                `protobuf:"bytes,20,opt,name=seaport_sell_orders,json=seaportSellOrders,proto3" json:"seaport_sell_orders"`
	Creator                 *NftDataCreator       `protobuf:"bytes,21,opt,name=creator,proto3" json:"creator"`
	Traits                  []*NftDataTraits      `protobuf:"bytes,22,rep,name=traits,proto3" json:"traits"`
	LastSale                *NftDataLastSale      `protobuf:"bytes,23,opt,name=last_sale,json=lastSale,proto3" json:"last_sale"`
	TopBid                  string                `protobuf:"bytes,24,opt,name=top_bid,json=topBid,proto3" json:"top_bid"`
	ListingDate             string                `protobuf:"bytes,25,opt,name=listing_date,json=listingDate,proto3" json:"listing_date"`
	IsPresale               bool                  `protobuf:"varint,26,opt,name=is_presale,json=isPresale,proto3" json:"is_presale"`
	TransferFeePaymentToken string                `protobuf:"bytes,27,opt,name=transfer_fee_payment_token,json=transferFeePaymentToken,proto3" json:"transfer_fee_payment_token"`
	TransferFee             string                `protobuf:"bytes,28,opt,name=transfer_fee,json=transferFee,proto3" json:"transfer_fee"`
	TokenId                 string                `protobuf:"bytes,29,opt,name=token_id,json=tokenId,proto3" json:"token_id"`
	CollectionName          string                `protobuf:"bytes,30,opt,name=collection_name,json=collectionName,proto3" json:"collection_name"`
	ContractAddress         string                `protobuf:"bytes,31,opt,name=contractAddress,proto3" json:"contractAddress"`
}

func (x *NftData) Reset() {
	*x = NftData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftData) ProtoMessage() {}

func (x *NftData) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftData.ProtoReflect.Descriptor instead.
func (*NftData) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{42}
}

func (x *NftData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NftData) GetNumSales() int64 {
	if x != nil {
		return x.NumSales
	}
	return 0
}

func (x *NftData) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *NftData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *NftData) GetImagePreviewUrl() string {
	if x != nil {
		return x.ImagePreviewUrl
	}
	return ""
}

func (x *NftData) GetImageThumbnailUrl() string {
	if x != nil {
		return x.ImageThumbnailUrl
	}
	return ""
}

func (x *NftData) GetImageOriginalUrl() string {
	if x != nil {
		return x.ImageOriginalUrl
	}
	return ""
}

func (x *NftData) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *NftData) GetAnimationOriginalUrl() string {
	if x != nil {
		return x.AnimationOriginalUrl
	}
	return ""
}

func (x *NftData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NftData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NftData) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *NftData) GetAssetContract() *NftDataAssetContract {
	if x != nil {
		return x.AssetContract
	}
	return nil
}

func (x *NftData) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

func (x *NftData) GetDecimals() string {
	if x != nil {
		return x.Decimals
	}
	return ""
}

func (x *NftData) GetTokenMetadata() string {
	if x != nil {
		return x.TokenMetadata
	}
	return ""
}

func (x *NftData) GetIsNsfw() bool {
	if x != nil {
		return x.IsNsfw
	}
	return false
}

func (x *NftData) GetOwner() *NftDataOwner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *NftData) GetSellOrders() []*NftDataSellOrders {
	if x != nil {
		return x.SellOrders
	}
	return nil
}

func (x *NftData) GetSeaportSellOrders() string {
	if x != nil {
		return x.SeaportSellOrders
	}
	return ""
}

func (x *NftData) GetCreator() *NftDataCreator {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *NftData) GetTraits() []*NftDataTraits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *NftData) GetLastSale() *NftDataLastSale {
	if x != nil {
		return x.LastSale
	}
	return nil
}

func (x *NftData) GetTopBid() string {
	if x != nil {
		return x.TopBid
	}
	return ""
}

func (x *NftData) GetListingDate() string {
	if x != nil {
		return x.ListingDate
	}
	return ""
}

func (x *NftData) GetIsPresale() bool {
	if x != nil {
		return x.IsPresale
	}
	return false
}

func (x *NftData) GetTransferFeePaymentToken() string {
	if x != nil {
		return x.TransferFeePaymentToken
	}
	return ""
}

func (x *NftData) GetTransferFee() string {
	if x != nil {
		return x.TransferFee
	}
	return ""
}

func (x *NftData) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *NftData) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *NftData) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type NftDataAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
}

func (x *NftDataAssetContract) Reset() {
	*x = NftDataAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataAssetContract) ProtoMessage() {}

func (x *NftDataAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataAssetContract.ProtoReflect.Descriptor instead.
func (*NftDataAssetContract) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{43}
}

func (x *NftDataAssetContract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NftDataOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NftDataOwner) Reset() {
	*x = NftDataOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataOwner) ProtoMessage() {}

func (x *NftDataOwner) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataOwner.ProtoReflect.Descriptor instead.
func (*NftDataOwner) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{44}
}

type NftDataSellOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NftDataSellOrders) Reset() {
	*x = NftDataSellOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataSellOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataSellOrders) ProtoMessage() {}

func (x *NftDataSellOrders) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataSellOrders.ProtoReflect.Descriptor instead.
func (*NftDataSellOrders) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{45}
}

type NftDataCreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *NftDataUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	ProfileImgUrl string       `protobuf:"bytes,2,opt,name=profile_img_url,json=profileImgUrl,proto3" json:"profile_img_url"`
	Address       string       `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	Config        string       `protobuf:"bytes,4,opt,name=config,proto3" json:"config"`
}

func (x *NftDataCreator) Reset() {
	*x = NftDataCreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataCreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataCreator) ProtoMessage() {}

func (x *NftDataCreator) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataCreator.ProtoReflect.Descriptor instead.
func (*NftDataCreator) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{46}
}

func (x *NftDataCreator) GetUser() *NftDataUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *NftDataCreator) GetProfileImgUrl() string {
	if x != nil {
		return x.ProfileImgUrl
	}
	return ""
}

func (x *NftDataCreator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NftDataCreator) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type NftDataUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
}

func (x *NftDataUser) Reset() {
	*x = NftDataUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataUser) ProtoMessage() {}

func (x *NftDataUser) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataUser.ProtoReflect.Descriptor instead.
func (*NftDataUser) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{47}
}

func (x *NftDataUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type NftDataTraits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraitType   string `protobuf:"bytes,1,opt,name=trait_type,json=traitType,proto3" json:"trait_type"`
	Value       string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	DisplayType string `protobuf:"bytes,3,opt,name=display_type,json=displayType,proto3" json:"display_type"`
	MaxValue    string `protobuf:"bytes,4,opt,name=max_value,json=maxValue,proto3" json:"max_value"`
	TraitCount  int64  `protobuf:"varint,5,opt,name=trait_count,json=traitCount,proto3" json:"trait_count"`
	Order       string `protobuf:"bytes,6,opt,name=order,proto3" json:"order"`
}

func (x *NftDataTraits) Reset() {
	*x = NftDataTraits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataTraits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataTraits) ProtoMessage() {}

func (x *NftDataTraits) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataTraits.ProtoReflect.Descriptor instead.
func (*NftDataTraits) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{48}
}

func (x *NftDataTraits) GetTraitType() string {
	if x != nil {
		return x.TraitType
	}
	return ""
}

func (x *NftDataTraits) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NftDataTraits) GetDisplayType() string {
	if x != nil {
		return x.DisplayType
	}
	return ""
}

func (x *NftDataTraits) GetMaxValue() string {
	if x != nil {
		return x.MaxValue
	}
	return ""
}

func (x *NftDataTraits) GetTraitCount() int64 {
	if x != nil {
		return x.TraitCount
	}
	return 0
}

func (x *NftDataTraits) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type NftDataLastSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol"`
}

func (x *NftDataLastSale) Reset() {
	*x = NftDataLastSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftDataLastSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftDataLastSale) ProtoMessage() {}

func (x *NftDataLastSale) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftDataLastSale.ProtoReflect.Descriptor instead.
func (*NftDataLastSale) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{49}
}

func (x *NftDataLastSale) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *NftDataLastSale) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type ListNftCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nft []*NftCollectionResponse `protobuf:"bytes,1,rep,name=nft,proto3" json:"nft"`
}

func (x *ListNftCollectionResponse) Reset() {
	*x = ListNftCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNftCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNftCollectionResponse) ProtoMessage() {}

func (x *ListNftCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNftCollectionResponse.ProtoReflect.Descriptor instead.
func (*ListNftCollectionResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{50}
}

func (x *ListNftCollectionResponse) GetNft() []*NftCollectionResponse {
	if x != nil {
		return x.Nft
	}
	return nil
}

type NFTDisplayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardDisplayStyle string `protobuf:"bytes,1,opt,name=card_display_style,json=cardDisplayStyle,proto3" json:"card_display_style"`
}

func (x *NFTDisplayData) Reset() {
	*x = NFTDisplayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFTDisplayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTDisplayData) ProtoMessage() {}

func (x *NFTDisplayData) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTDisplayData.ProtoReflect.Descriptor instead.
func (*NFTDisplayData) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{51}
}

func (x *NFTDisplayData) GetCardDisplayStyle() string {
	if x != nil {
		return x.CardDisplayStyle
	}
	return ""
}

type GetPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PositionChainData `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
}

func (x *GetPositionRequest) Reset() {
	*x = GetPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionRequest) ProtoMessage() {}

func (x *GetPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionRequest.ProtoReflect.Descriptor instead.
func (*GetPositionRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{52}
}

func (x *GetPositionRequest) GetItems() []*PositionChainData {
	if x != nil {
		return x.Items
	}
	return nil
}

type PositionChainData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain       string   `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address     string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	ProtocolIds []string `protobuf:"bytes,3,rep,name=protocol_ids,json=protocolIds,proto3" json:"protocol_ids"`
}

func (x *PositionChainData) Reset() {
	*x = PositionChainData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionChainData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionChainData) ProtoMessage() {}

func (x *PositionChainData) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionChainData.ProtoReflect.Descriptor instead.
func (*PositionChainData) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{53}
}

func (x *PositionChainData) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *PositionChainData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PositionChainData) GetProtocolIds() []string {
	if x != nil {
		return x.ProtocolIds
	}
	return nil
}

type GetPositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positions []*Positions `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions"`
}

func (x *GetPositionsResponse) Reset() {
	*x = GetPositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionsResponse) ProtoMessage() {}

func (x *GetPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionsResponse.ProtoReflect.Descriptor instead.
func (*GetPositionsResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{54}
}

func (x *GetPositionsResponse) GetPositions() []*Positions {
	if x != nil {
		return x.Positions
	}
	return nil
}

type TokensSupplied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress  string `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address"`
	TokenName     string `protobuf:"bytes,2,opt,name=token_name,json=tokenName,proto3" json:"token_name"`
	TokenSymbol   string `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol"`
	TokenDecimals uint32 `protobuf:"varint,4,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals"`
	LogoUrl       string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	Balance       string `protobuf:"bytes,6,opt,name=balance,proto3" json:"balance"`
	QuoteRate     string `protobuf:"bytes,7,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	QuotePrice    string `protobuf:"bytes,8,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price"`
}

func (x *TokensSupplied) Reset() {
	*x = TokensSupplied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensSupplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensSupplied) ProtoMessage() {}

func (x *TokensSupplied) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensSupplied.ProtoReflect.Descriptor instead.
func (*TokensSupplied) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{55}
}

func (x *TokensSupplied) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *TokensSupplied) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *TokensSupplied) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *TokensSupplied) GetTokenDecimals() uint32 {
	if x != nil {
		return x.TokenDecimals
	}
	return 0
}

func (x *TokensSupplied) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *TokensSupplied) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TokensSupplied) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *TokensSupplied) GetQuotePrice() string {
	if x != nil {
		return x.QuotePrice
	}
	return ""
}

type UnderlyingTokenList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress  string `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address"`
	TokenName     string `protobuf:"bytes,2,opt,name=token_name,json=tokenName,proto3" json:"token_name"`
	TokenSymbol   string `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol"`
	TokenDecimals uint32 `protobuf:"varint,4,opt,name=token_decimals,json=tokenDecimals,proto3" json:"token_decimals"`
	LogoUrl       string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	Balance       string `protobuf:"bytes,6,opt,name=balance,proto3" json:"balance"`
	QuoteRate     string `protobuf:"bytes,7,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	QuotePrice    string `protobuf:"bytes,8,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price"`
}

func (x *UnderlyingTokenList) Reset() {
	*x = UnderlyingTokenList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderlyingTokenList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderlyingTokenList) ProtoMessage() {}

func (x *UnderlyingTokenList) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderlyingTokenList.ProtoReflect.Descriptor instead.
func (*UnderlyingTokenList) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{56}
}

func (x *UnderlyingTokenList) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *UnderlyingTokenList) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *UnderlyingTokenList) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *UnderlyingTokenList) GetTokenDecimals() uint32 {
	if x != nil {
		return x.TokenDecimals
	}
	return 0
}

func (x *UnderlyingTokenList) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *UnderlyingTokenList) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *UnderlyingTokenList) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *UnderlyingTokenList) GetQuotePrice() string {
	if x != nil {
		return x.QuotePrice
	}
	return ""
}

type Lending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActionable        bool                   `protobuf:"varint,1,opt,name=is_actionable,json=isActionable,proto3" json:"is_actionable"`
	Type                string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	AssetValue          string                 `protobuf:"bytes,3,opt,name=asset_value,json=assetValue,proto3" json:"asset_value"`
	NetValue            string                 `protobuf:"bytes,4,opt,name=net_value,json=netValue,proto3" json:"net_value"`
	TokensSupplied      []*TokensSupplied      `protobuf:"bytes,5,rep,name=tokens_supplied,json=tokensSupplied,proto3" json:"tokens_supplied"`
	UnderlyingTokenList []*UnderlyingTokenList `protobuf:"bytes,6,rep,name=underlying_token_list,json=underlyingTokenList,proto3" json:"underlying_token_list"`
}

func (x *Lending) Reset() {
	*x = Lending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lending) ProtoMessage() {}

func (x *Lending) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lending.ProtoReflect.Descriptor instead.
func (*Lending) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{57}
}

func (x *Lending) GetIsActionable() bool {
	if x != nil {
		return x.IsActionable
	}
	return false
}

func (x *Lending) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Lending) GetAssetValue() string {
	if x != nil {
		return x.AssetValue
	}
	return ""
}

func (x *Lending) GetNetValue() string {
	if x != nil {
		return x.NetValue
	}
	return ""
}

func (x *Lending) GetTokensSupplied() []*TokensSupplied {
	if x != nil {
		return x.TokensSupplied
	}
	return nil
}

func (x *Lending) GetUnderlyingTokenList() []*UnderlyingTokenList {
	if x != nil {
		return x.UnderlyingTokenList
	}
	return nil
}

type Portfolio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetUsdValue   string           `protobuf:"bytes,1,opt,name=net_usd_value,json=netUsdValue,proto3" json:"net_usd_value"`
	Lending       []*Lending       `protobuf:"bytes,2,rep,name=lending,proto3" json:"lending"`
	LiquidityPool []*LiquidityPool `protobuf:"bytes,3,rep,name=liquidity_pool,json=liquidityPool,proto3" json:"liquidity_pool"`
}

func (x *Portfolio) Reset() {
	*x = Portfolio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Portfolio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Portfolio) ProtoMessage() {}

func (x *Portfolio) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Portfolio.ProtoReflect.Descriptor instead.
func (*Portfolio) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{58}
}

func (x *Portfolio) GetNetUsdValue() string {
	if x != nil {
		return x.NetUsdValue
	}
	return ""
}

func (x *Portfolio) GetLending() []*Lending {
	if x != nil {
		return x.Lending
	}
	return nil
}

func (x *Portfolio) GetLiquidityPool() []*LiquidityPool {
	if x != nil {
		return x.LiquidityPool
	}
	return nil
}

type LiquidityPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActionable        bool                   `protobuf:"varint,1,opt,name=is_actionable,json=isActionable,proto3" json:"is_actionable"`
	Type                string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	AssetValue          string                 `protobuf:"bytes,3,opt,name=asset_value,json=assetValue,proto3" json:"asset_value"`
	NetValue            string                 `protobuf:"bytes,4,opt,name=net_value,json=netValue,proto3" json:"net_value"`
	TokensSupplied      []*TokensSupplied      `protobuf:"bytes,5,rep,name=tokens_supplied,json=tokensSupplied,proto3" json:"tokens_supplied"`
	UnderlyingTokenList []*UnderlyingTokenList `protobuf:"bytes,6,rep,name=underlying_token_list,json=underlyingTokenList,proto3" json:"underlying_token_list"`
}

func (x *LiquidityPool) Reset() {
	*x = LiquidityPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidityPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidityPool) ProtoMessage() {}

func (x *LiquidityPool) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidityPool.ProtoReflect.Descriptor instead.
func (*LiquidityPool) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{59}
}

func (x *LiquidityPool) GetIsActionable() bool {
	if x != nil {
		return x.IsActionable
	}
	return false
}

func (x *LiquidityPool) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LiquidityPool) GetAssetValue() string {
	if x != nil {
		return x.AssetValue
	}
	return ""
}

func (x *LiquidityPool) GetNetValue() string {
	if x != nil {
		return x.NetValue
	}
	return ""
}

func (x *LiquidityPool) GetTokensSupplied() []*TokensSupplied {
	if x != nil {
		return x.TokensSupplied
	}
	return nil
}

func (x *LiquidityPool) GetUnderlyingTokenList() []*UnderlyingTokenList {
	if x != nil {
		return x.UnderlyingTokenList
	}
	return nil
}

type Protocols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolId   string     `protobuf:"bytes,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id"`
	Name         string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SiteUrl      string     `protobuf:"bytes,3,opt,name=site_url,json=siteUrl,proto3" json:"site_url"`
	LogoUrl      string     `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	IsActionable bool       `protobuf:"varint,5,opt,name=is_actionable,json=isActionable,proto3" json:"is_actionable"`
	Portfolio    *Portfolio `protobuf:"bytes,6,opt,name=portfolio,proto3" json:"portfolio"`
}

func (x *Protocols) Reset() {
	*x = Protocols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocols) ProtoMessage() {}

func (x *Protocols) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocols.ProtoReflect.Descriptor instead.
func (*Protocols) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{60}
}

func (x *Protocols) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *Protocols) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Protocols) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *Protocols) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Protocols) GetIsActionable() bool {
	if x != nil {
		return x.IsActionable
	}
	return false
}

func (x *Protocols) GetPortfolio() *Portfolio {
	if x != nil {
		return x.Portfolio
	}
	return nil
}

type Positions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     string       `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address   string       `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	Protocols []*Protocols `protobuf:"bytes,3,rep,name=protocols,proto3" json:"protocols"`
}

func (x *Positions) Reset() {
	*x = Positions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Positions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Positions) ProtoMessage() {}

func (x *Positions) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Positions.ProtoReflect.Descriptor instead.
func (*Positions) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{61}
}

func (x *Positions) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Positions) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Positions) GetProtocols() []*Protocols {
	if x != nil {
		return x.Protocols
	}
	return nil
}

type GetOpportunitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
}

func (x *GetOpportunitiesRequest) Reset() {
	*x = GetOpportunitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpportunitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpportunitiesRequest) ProtoMessage() {}

func (x *GetOpportunitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpportunitiesRequest.ProtoReflect.Descriptor instead.
func (*GetOpportunitiesRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{62}
}

func (x *GetOpportunitiesRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type GetOpportunitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opportunities []byte `protobuf:"bytes,1,opt,name=opportunities,proto3" json:"opportunities"`
}

func (x *GetOpportunitesResponse) Reset() {
	*x = GetOpportunitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpportunitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpportunitesResponse) ProtoMessage() {}

func (x *GetOpportunitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpportunitesResponse.ProtoReflect.Descriptor instead.
func (*GetOpportunitesResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{63}
}

func (x *GetOpportunitesResponse) GetOpportunities() []byte {
	if x != nil {
		return x.Opportunities
	}
	return nil
}

var File_contract_proto protoreflect.FileDescriptor

var file_contract_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x78,
	0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x7a, 0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x40, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7d, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb7, 0x03, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x32, 0x34, 0x68, 0x12, 0x2f, 0x0a,
	0x14, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x50, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x72, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x6f,
	0x70, 0x5f, 0x6c, 0x31, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x6f, 0x70, 0x4c, 0x31, 0x46, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0c, 0x47, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x61, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x73, 0x61, 0x66, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x73,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x61, 0x73, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x4c, 0x6f, 0x77, 0x57, 0x61, 0x69,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x76, 0x67, 0x57, 0x61, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x61, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x73,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x66, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x22, 0x40, 0x0a, 0x16,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x40,
	0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xbf, 0x03, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcb,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x4f, 0x6e, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x78, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x73,
	0x12, 0x3a, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x22, 0xe8, 0x01, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x81, 0x04, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x61, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x10, 0x47, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x0f, 0x54, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x9c, 0x02, 0x0a, 0x03, 0x4c, 0x6f,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0x8d, 0x03, 0x0a, 0x10, 0x54, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xb6, 0x03, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x54, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x59,
	0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x74, 0x0a, 0x10, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0x31, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x55, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x4b, 0x0a, 0x14, 0x42, 0x75, 0x6c, 0x6b,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x50, 0x61, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x70,
	0x61, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x73, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x6f, 0x73, 0x73, 0x12,
	0x38, 0x0a, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x32,
	0x34, 0x48, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x48, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x32, 0x34,
	0x48, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x48, 0x22, 0x24, 0x0a, 0x0a, 0x45, 0x4e, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x27, 0x0a,
	0x0b, 0x45, 0x4e, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x4e, 0x66, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xbc,
	0x0a, 0x0a, 0x15, 0x4e, 0x66, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x66,
	0x69, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x6f, 0x46, 0x69, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x1a, 0x64, 0x65,
	0x76, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x69,
	0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x64, 0x65, 0x76, 0x42, 0x75, 0x79, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x61, 0x73, 0x69, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x1b, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x65, 0x76,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x46, 0x54, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x61, 0x66, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x61, 0x66, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x72, 0x67, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x78, 0x69,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x1e, 0x6f,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x42, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x44, 0x0a, 0x1f, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x61, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x61, 0x73, 0x69, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x77, 0x69, 0x6b, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x6e, 0x73, 0x66, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4e, 0x73,
	0x66, 0x77, 0x12, 0x29, 0x0a, 0x08, 0x6e, 0x66, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x20,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x09,
	0x0a, 0x07, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x75,
	0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a,
	0x16, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x42,
	0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4e, 0x73, 0x66, 0x77, 0x12, 0x29, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65,
	0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x65, 0x61, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x16, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x73, 0x12, 0x33, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x69,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x42, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x30, 0x0a, 0x14, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6c, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x4e, 0x66, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x29, 0x0a, 0x0b, 0x4e,
	0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x4e, 0x66, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x0f, 0x4e, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x61, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x4b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x66, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6e, 0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x66, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x03, 0x6e, 0x66, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x4e, 0x46, 0x54, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x66, 0x0a, 0x11, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49,
	0x64, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x0f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x9a, 0x02, 0x0a, 0x15, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x93,
	0x02, 0x0a, 0x07, 0x4c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x12, 0x50, 0x0a, 0x15, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c,
	0x79, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x55, 0x73,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x3c, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x52,
	0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x22, 0x9a,
	0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x15, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x09,
	0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x22, 0x6b, 0x0a, 0x09, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x3f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6f, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_proto_rawDescOnce sync.Once
	file_contract_proto_rawDescData = file_contract_proto_rawDesc
)

func file_contract_proto_rawDescGZIP() []byte {
	file_contract_proto_rawDescOnce.Do(func() {
		file_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_proto_rawDescData)
	})
	return file_contract_proto_rawDescData
}

var file_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_contract_proto_goTypes = []interface{}{
	(*TokenPriceRequest)(nil),         // 0: proto.TokenPriceRequest
	(*TokenPriceResponse)(nil),        // 1: proto.TokenPriceResponse
	(*TokenPriceResponseV2)(nil),      // 2: proto.TokenPriceResponseV2
	(*BalanceRequest)(nil),            // 3: proto.BalanceRequest
	(*BalanceResponse)(nil),           // 4: proto.BalanceResponse
	(*TokenBalance)(nil),              // 5: proto.TokenBalance
	(*ProcessingFeeRequest)(nil),      // 6: proto.ProcessingFeeRequest
	(*ProcessingFeeResponse)(nil),     // 7: proto.ProcessingFeeResponse
	(*NonceRequest)(nil),              // 8: proto.NonceRequest
	(*NonceResponse)(nil),             // 9: proto.NonceResponse
	(*GasPriceInfo)(nil),              // 10: proto.GasPriceInfo
	(*SendTransactionRequest)(nil),    // 11: proto.SendTransactionRequest
	(*SendTransactionResponse)(nil),   // 12: proto.SendTransactionResponse
	(*TransactionData)(nil),           // 13: proto.TransactionData
	(*ListTransactionRequest)(nil),    // 14: proto.ListTransactionRequest
	(*ListTransactionResponse)(nil),   // 15: proto.ListTransactionResponse
	(*GetTransactionRequest)(nil),     // 16: proto.GetTransactionRequest
	(*TransactionInfo)(nil),           // 17: proto.TransactionInfo
	(*ValidatorDetails)(nil),          // 18: proto.ValidatorDetails
	(*GetTransactionResponse)(nil),    // 19: proto.GetTransactionResponse
	(*GasLimitRequest)(nil),           // 20: proto.GasLimitRequest
	(*GasLimitResponse)(nil),          // 21: proto.GasLimitResponse
	(*TxStatusRequest)(nil),           // 22: proto.TxStatusRequest
	(*Log)(nil),                       // 23: proto.Log
	(*TxStatusResponse)(nil),          // 24: proto.TxStatusResponse
	(*TokenDetailRequest)(nil),        // 25: proto.TokenDetailRequest
	(*TokenDetailResponse)(nil),       // 26: proto.TokenDetailResponse
	(*TokenInfoRequest)(nil),          // 27: proto.TokenInfoRequest
	(*TokenInfoResponse)(nil),         // 28: proto.TokenInfoResponse
	(*AllowanceRequest)(nil),          // 29: proto.AllowanceRequest
	(*AllowanceResponse)(nil),         // 30: proto.AllowanceResponse
	(*BulkAllowanceResponse)(nil),     // 31: proto.BulkAllowanceResponse
	(*ApprovalRequest)(nil),           // 32: proto.ApprovalRequest
	(*AllowanceParams)(nil),           // 33: proto.AllowanceParams
	(*ApprovalResponse)(nil),          // 34: proto.ApprovalResponse
	(*BulkApprovalResponse)(nil),      // 35: proto.BulkApprovalResponse
	(*UserDataRequest)(nil),           // 36: proto.UserDataRequest
	(*UserDataResponse)(nil),          // 37: proto.UserDataResponse
	(*ENSRequest)(nil),                // 38: proto.ENSRequest
	(*ENSResponse)(nil),               // 39: proto.ENSResponse
	(*NftCollectionRequest)(nil),      // 40: proto.NftCollectionRequest
	(*NftCollectionResponse)(nil),     // 41: proto.NftCollectionResponse
	(*NftData)(nil),                   // 42: proto.NftData
	(*NftDataAssetContract)(nil),      // 43: proto.NftDataAssetContract
	(*NftDataOwner)(nil),              // 44: proto.NftDataOwner
	(*NftDataSellOrders)(nil),         // 45: proto.NftDataSellOrders
	(*NftDataCreator)(nil),            // 46: proto.NftDataCreator
	(*NftDataUser)(nil),               // 47: proto.NftDataUser
	(*NftDataTraits)(nil),             // 48: proto.NftDataTraits
	(*NftDataLastSale)(nil),           // 49: proto.NftDataLastSale
	(*ListNftCollectionResponse)(nil), // 50: proto.ListNftCollectionResponse
	(*NFTDisplayData)(nil),            // 51: proto.NFTDisplayData
	(*GetPositionRequest)(nil),        // 52: proto.GetPositionRequest
	(*PositionChainData)(nil),         // 53: proto.PositionChainData
	(*GetPositionsResponse)(nil),      // 54: proto.GetPositionsResponse
	(*TokensSupplied)(nil),            // 55: proto.Tokens_supplied
	(*UnderlyingTokenList)(nil),       // 56: proto.Underlying_token_list
	(*Lending)(nil),                   // 57: proto.Lending
	(*Portfolio)(nil),                 // 58: proto.Portfolio
	(*LiquidityPool)(nil),             // 59: proto.Liquidity_pool
	(*Protocols)(nil),                 // 60: proto.Protocols
	(*Positions)(nil),                 // 61: proto.Positions
	(*GetOpportunitiesRequest)(nil),   // 62: proto.GetOpportunitiesRequest
	(*GetOpportunitesResponse)(nil),   // 63: proto.GetOpportunitesResponse
}
var file_contract_proto_depIdxs = []int32{
	5,  // 0: proto.BalanceResponse.token:type_name -> proto.TokenBalance
	10, // 1: proto.NonceResponse.gas_price:type_name -> proto.GasPriceInfo
	17, // 2: proto.TransactionData.sent:type_name -> proto.TransactionInfo
	17, // 3: proto.TransactionData.received:type_name -> proto.TransactionInfo
	17, // 4: proto.TransactionData.others:type_name -> proto.TransactionInfo
	13, // 5: proto.ListTransactionResponse.transactions:type_name -> proto.TransactionData
	17, // 6: proto.GetTransactionResponse.sent:type_name -> proto.TransactionInfo
	17, // 7: proto.GetTransactionResponse.received:type_name -> proto.TransactionInfo
	18, // 8: proto.GetTransactionResponse.validator_details:type_name -> proto.ValidatorDetails
	23, // 9: proto.TxStatusResponse.logs:type_name -> proto.Log
	30, // 10: proto.BulkAllowanceResponse.response:type_name -> proto.AllowanceResponse
	34, // 11: proto.BulkApprovalResponse.response:type_name -> proto.ApprovalResponse
	51, // 12: proto.NftCollectionResponse.display_data:type_name -> proto.NFTDisplayData
	42, // 13: proto.NftCollectionResponse.nft_data:type_name -> proto.NftData
	43, // 14: proto.NftData.asset_contract:type_name -> proto.NftDataAssetContract
	44, // 15: proto.NftData.owner:type_name -> proto.NftDataOwner
	45, // 16: proto.NftData.sell_orders:type_name -> proto.NftDataSellOrders
	46, // 17: proto.NftData.creator:type_name -> proto.NftDataCreator
	48, // 18: proto.NftData.traits:type_name -> proto.NftDataTraits
	49, // 19: proto.NftData.last_sale:type_name -> proto.NftDataLastSale
	47, // 20: proto.NftDataCreator.user:type_name -> proto.NftDataUser
	41, // 21: proto.ListNftCollectionResponse.nft:type_name -> proto.NftCollectionResponse
	53, // 22: proto.GetPositionRequest.items:type_name -> proto.PositionChainData
	61, // 23: proto.GetPositionsResponse.positions:type_name -> proto.Positions
	55, // 24: proto.Lending.tokens_supplied:type_name -> proto.Tokens_supplied
	56, // 25: proto.Lending.underlying_token_list:type_name -> proto.Underlying_token_list
	57, // 26: proto.Portfolio.lending:type_name -> proto.Lending
	59, // 27: proto.Portfolio.liquidity_pool:type_name -> proto.Liquidity_pool
	55, // 28: proto.Liquidity_pool.tokens_supplied:type_name -> proto.Tokens_supplied
	56, // 29: proto.Liquidity_pool.underlying_token_list:type_name -> proto.Underlying_token_list
	58, // 30: proto.Protocols.portfolio:type_name -> proto.Portfolio
	60, // 31: proto.Positions.protocols:type_name -> proto.Protocols
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_contract_proto_init() }
func file_contract_proto_init() {
	if File_contract_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPriceResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasPriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAllowanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowanceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkApprovalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataSellOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataCreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataTraits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftDataLastSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNftCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFTDisplayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionChainData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensSupplied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderlyingTokenList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Portfolio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidityPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Protocols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Positions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpportunitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpportunitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contract_proto_goTypes,
		DependencyIndexes: file_contract_proto_depIdxs,
		MessageInfos:      file_contract_proto_msgTypes,
	}.Build()
	File_contract_proto = out.File
	file_contract_proto_rawDesc = nil
	file_contract_proto_goTypes = nil
	file_contract_proto_depIdxs = nil
}
