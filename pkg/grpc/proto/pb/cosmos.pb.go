// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cosmos.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CosmosAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            string                `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
	ChainId            string                `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id"`
	QuoteCurrency      string                `protobuf:"bytes,3,opt,name=quote_currency,json=quoteCurrency,proto3" json:"quote_currency"`
	AccountNumber      int64                 `protobuf:"varint,4,opt,name=account_number,json=accountNumber,proto3" json:"account_number"`
	Sequence           int64                 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence"`
	CrossChainTransfer bool                  `protobuf:"varint,6,opt,name=cross_chain_transfer,json=crossChainTransfer,proto3" json:"cross_chain_transfer"`
	Token              []*CosmosTokenBalance `protobuf:"bytes,7,rep,name=token,proto3" json:"token"`
}

func (x *CosmosAssetResponse) Reset() {
	*x = CosmosAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosAssetResponse) ProtoMessage() {}

func (x *CosmosAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosAssetResponse.ProtoReflect.Descriptor instead.
func (*CosmosAssetResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{0}
}

func (x *CosmosAssetResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CosmosAssetResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *CosmosAssetResponse) GetQuoteCurrency() string {
	if x != nil {
		return x.QuoteCurrency
	}
	return ""
}

func (x *CosmosAssetResponse) GetAccountNumber() int64 {
	if x != nil {
		return x.AccountNumber
	}
	return 0
}

func (x *CosmosAssetResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *CosmosAssetResponse) GetCrossChainTransfer() bool {
	if x != nil {
		return x.CrossChainTransfer
	}
	return false
}

func (x *CosmosAssetResponse) GetToken() []*CosmosTokenBalance {
	if x != nil {
		return x.Token
	}
	return nil
}

type CosmosTokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName         string  `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name"`
	ContractTickerSymbol string  `protobuf:"bytes,2,opt,name=contract_ticker_symbol,json=contractTickerSymbol,proto3" json:"contract_ticker_symbol"`
	ContractDecimals     int32   `protobuf:"varint,3,opt,name=contract_decimals,json=contractDecimals,proto3" json:"contract_decimals"`
	Coin                 int64   `protobuf:"varint,4,opt,name=coin,proto3" json:"coin"`
	Balance              string  `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance"`
	QuoteRate            float64 `protobuf:"fixed64,6,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	LogoUrl              string  `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	QuoteRate_24H        string  `protobuf:"bytes,8,opt,name=quote_rate_24h,json=quoteRate24h,proto3" json:"quote_rate_24h"`
	QuotePctChange_24H   float64 `protobuf:"fixed64,9,opt,name=quote_pct_change_24h,json=quotePctChange24h,proto3" json:"quote_pct_change_24h"`
	QuotePrice           string  `protobuf:"bytes,10,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price"`
	Denom                string  `protobuf:"bytes,11,opt,name=denom,proto3" json:"denom"`
}

func (x *CosmosTokenBalance) Reset() {
	*x = CosmosTokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosTokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosTokenBalance) ProtoMessage() {}

func (x *CosmosTokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosTokenBalance.ProtoReflect.Descriptor instead.
func (*CosmosTokenBalance) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{1}
}

func (x *CosmosTokenBalance) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *CosmosTokenBalance) GetContractTickerSymbol() string {
	if x != nil {
		return x.ContractTickerSymbol
	}
	return ""
}

func (x *CosmosTokenBalance) GetContractDecimals() int32 {
	if x != nil {
		return x.ContractDecimals
	}
	return 0
}

func (x *CosmosTokenBalance) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *CosmosTokenBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *CosmosTokenBalance) GetQuoteRate() float64 {
	if x != nil {
		return x.QuoteRate
	}
	return 0
}

func (x *CosmosTokenBalance) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *CosmosTokenBalance) GetQuoteRate_24H() string {
	if x != nil {
		return x.QuoteRate_24H
	}
	return ""
}

func (x *CosmosTokenBalance) GetQuotePctChange_24H() float64 {
	if x != nil {
		return x.QuotePctChange_24H
	}
	return 0
}

func (x *CosmosTokenBalance) GetQuotePrice() string {
	if x != nil {
		return x.QuotePrice
	}
	return ""
}

func (x *CosmosTokenBalance) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

type CosmosValidatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
	Chain   string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain"`
	Testnet bool   `protobuf:"varint,3,opt,name=testnet,proto3" json:"testnet"`
}

func (x *CosmosValidatorsRequest) Reset() {
	*x = CosmosValidatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosValidatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosValidatorsRequest) ProtoMessage() {}

func (x *CosmosValidatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosValidatorsRequest.ProtoReflect.Descriptor instead.
func (*CosmosValidatorsRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{2}
}

func (x *CosmosValidatorsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CosmosValidatorsRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosValidatorsRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type CosmosValidatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     string           `protobuf:"bytes,1,opt,name=height,proto3" json:"height"`
	Validators []*ValidatorInfo `protobuf:"bytes,6,rep,name=validators,proto3" json:"validators"`
}

func (x *CosmosValidatorsResponse) Reset() {
	*x = CosmosValidatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosValidatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosValidatorsResponse) ProtoMessage() {}

func (x *CosmosValidatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosValidatorsResponse.ProtoReflect.Descriptor instead.
func (*CosmosValidatorsResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{3}
}

func (x *CosmosValidatorsResponse) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *CosmosValidatorsResponse) GetValidators() []*ValidatorInfo {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ValidatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorAddress   string                `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address"`
	ConsensusPubkey   string                `protobuf:"bytes,2,opt,name=consensus_pubkey,json=consensusPubkey,proto3" json:"consensus_pubkey"`
	Jailed            bool                  `protobuf:"varint,3,opt,name=jailed,proto3" json:"jailed"`
	Status            string                `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Tokens            string                `protobuf:"bytes,5,opt,name=tokens,proto3" json:"tokens"`
	DelegatorShares   string                `protobuf:"bytes,6,opt,name=delegator_shares,json=delegatorShares,proto3" json:"delegator_shares"`
	Description       *ValidatorDescription `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
	UnbondingHeight   string                `protobuf:"bytes,8,opt,name=unbonding_height,json=unbondingHeight,proto3" json:"unbonding_height"`
	UnbondingTime     string                `protobuf:"bytes,9,opt,name=unbonding_time,json=unbondingTime,proto3" json:"unbonding_time"`
	Commission        *ValidatorCommission  `protobuf:"bytes,10,opt,name=commission,proto3" json:"commission"`
	MinSelfDelegation string                `protobuf:"bytes,11,opt,name=min_self_delegation,json=minSelfDelegation,proto3" json:"min_self_delegation"`
	ActiveStake       bool                  `protobuf:"varint,12,opt,name=active_stake,json=activeStake,proto3" json:"active_stake"`
	VotingPower       string                `protobuf:"bytes,13,opt,name=voting_power,json=votingPower,proto3" json:"voting_power"`
	QuoteRate         string                `protobuf:"bytes,14,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	Apr               float64               `protobuf:"fixed64,15,opt,name=apr,proto3" json:"apr"`
	ImageUrl          string                `protobuf:"bytes,16,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *ValidatorInfo) Reset() {
	*x = ValidatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorInfo) ProtoMessage() {}

func (x *ValidatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorInfo.ProtoReflect.Descriptor instead.
func (*ValidatorInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{4}
}

func (x *ValidatorInfo) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *ValidatorInfo) GetConsensusPubkey() string {
	if x != nil {
		return x.ConsensusPubkey
	}
	return ""
}

func (x *ValidatorInfo) GetJailed() bool {
	if x != nil {
		return x.Jailed
	}
	return false
}

func (x *ValidatorInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidatorInfo) GetTokens() string {
	if x != nil {
		return x.Tokens
	}
	return ""
}

func (x *ValidatorInfo) GetDelegatorShares() string {
	if x != nil {
		return x.DelegatorShares
	}
	return ""
}

func (x *ValidatorInfo) GetDescription() *ValidatorDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ValidatorInfo) GetUnbondingHeight() string {
	if x != nil {
		return x.UnbondingHeight
	}
	return ""
}

func (x *ValidatorInfo) GetUnbondingTime() string {
	if x != nil {
		return x.UnbondingTime
	}
	return ""
}

func (x *ValidatorInfo) GetCommission() *ValidatorCommission {
	if x != nil {
		return x.Commission
	}
	return nil
}

func (x *ValidatorInfo) GetMinSelfDelegation() string {
	if x != nil {
		return x.MinSelfDelegation
	}
	return ""
}

func (x *ValidatorInfo) GetActiveStake() bool {
	if x != nil {
		return x.ActiveStake
	}
	return false
}

func (x *ValidatorInfo) GetVotingPower() string {
	if x != nil {
		return x.VotingPower
	}
	return ""
}

func (x *ValidatorInfo) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *ValidatorInfo) GetApr() float64 {
	if x != nil {
		return x.Apr
	}
	return 0
}

func (x *ValidatorInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type ValidatorForDelegatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorAddress   string                `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address"`
	ConsensusPubkey   string                `protobuf:"bytes,2,opt,name=consensus_pubkey,json=consensusPubkey,proto3" json:"consensus_pubkey"`
	Jailed            bool                  `protobuf:"varint,3,opt,name=jailed,proto3" json:"jailed"`
	Status            string                `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Tokens            string                `protobuf:"bytes,5,opt,name=tokens,proto3" json:"tokens"`
	DelegatorShares   string                `protobuf:"bytes,6,opt,name=delegator_shares,json=delegatorShares,proto3" json:"delegator_shares"`
	Description       *ValidatorDescription `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
	UnbondingHeight   string                `protobuf:"bytes,8,opt,name=unbonding_height,json=unbondingHeight,proto3" json:"unbonding_height"`
	UnbondingTime     string                `protobuf:"bytes,9,opt,name=unbonding_time,json=unbondingTime,proto3" json:"unbonding_time"`
	Commission        *ValidatorCommission  `protobuf:"bytes,10,opt,name=commission,proto3" json:"commission"`
	MinSelfDelegation string                `protobuf:"bytes,11,opt,name=min_self_delegation,json=minSelfDelegation,proto3" json:"min_self_delegation"`
	VotingPower       string                `protobuf:"bytes,12,opt,name=voting_power,json=votingPower,proto3" json:"voting_power"`
	Apr               float64               `protobuf:"fixed64,13,opt,name=apr,proto3" json:"apr"`
	ImageUrl          string                `protobuf:"bytes,14,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *ValidatorForDelegatorInfo) Reset() {
	*x = ValidatorForDelegatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorForDelegatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorForDelegatorInfo) ProtoMessage() {}

func (x *ValidatorForDelegatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorForDelegatorInfo.ProtoReflect.Descriptor instead.
func (*ValidatorForDelegatorInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{5}
}

func (x *ValidatorForDelegatorInfo) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetConsensusPubkey() string {
	if x != nil {
		return x.ConsensusPubkey
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetJailed() bool {
	if x != nil {
		return x.Jailed
	}
	return false
}

func (x *ValidatorForDelegatorInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetTokens() string {
	if x != nil {
		return x.Tokens
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetDelegatorShares() string {
	if x != nil {
		return x.DelegatorShares
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetDescription() *ValidatorDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ValidatorForDelegatorInfo) GetUnbondingHeight() string {
	if x != nil {
		return x.UnbondingHeight
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetUnbondingTime() string {
	if x != nil {
		return x.UnbondingTime
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetCommission() *ValidatorCommission {
	if x != nil {
		return x.Commission
	}
	return nil
}

func (x *ValidatorForDelegatorInfo) GetMinSelfDelegation() string {
	if x != nil {
		return x.MinSelfDelegation
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetVotingPower() string {
	if x != nil {
		return x.VotingPower
	}
	return ""
}

func (x *ValidatorForDelegatorInfo) GetApr() float64 {
	if x != nil {
		return x.Apr
	}
	return 0
}

func (x *ValidatorForDelegatorInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type ValidatorDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moniker         string `protobuf:"bytes,1,opt,name=moniker,proto3" json:"moniker"`
	Identity        string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity"`
	Website         string `protobuf:"bytes,3,opt,name=website,proto3" json:"website"`
	SecurityContact string `protobuf:"bytes,4,opt,name=security_contact,json=securityContact,proto3" json:"security_contact"`
	Details         string `protobuf:"bytes,5,opt,name=details,proto3" json:"details"`
}

func (x *ValidatorDescription) Reset() {
	*x = ValidatorDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorDescription) ProtoMessage() {}

func (x *ValidatorDescription) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorDescription.ProtoReflect.Descriptor instead.
func (*ValidatorDescription) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{6}
}

func (x *ValidatorDescription) GetMoniker() string {
	if x != nil {
		return x.Moniker
	}
	return ""
}

func (x *ValidatorDescription) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *ValidatorDescription) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *ValidatorDescription) GetSecurityContact() string {
	if x != nil {
		return x.SecurityContact
	}
	return ""
}

func (x *ValidatorDescription) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ValidatorCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommissionRates *ValidatorCommissionRates `protobuf:"bytes,1,opt,name=commission_rates,json=commissionRates,proto3" json:"commission_rates"`
	UpdateTime      string                    `protobuf:"bytes,2,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
}

func (x *ValidatorCommission) Reset() {
	*x = ValidatorCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorCommission) ProtoMessage() {}

func (x *ValidatorCommission) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorCommission.ProtoReflect.Descriptor instead.
func (*ValidatorCommission) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{7}
}

func (x *ValidatorCommission) GetCommissionRates() *ValidatorCommissionRates {
	if x != nil {
		return x.CommissionRates
	}
	return nil
}

func (x *ValidatorCommission) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type ValidatorCommissionRates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate          string `protobuf:"bytes,1,opt,name=rate,proto3" json:"rate"`
	MaxRate       string `protobuf:"bytes,2,opt,name=max_rate,json=maxRate,proto3" json:"max_rate"`
	MaxChangeRate string `protobuf:"bytes,3,opt,name=max_change_rate,json=maxChangeRate,proto3" json:"max_change_rate"`
}

func (x *ValidatorCommissionRates) Reset() {
	*x = ValidatorCommissionRates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorCommissionRates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorCommissionRates) ProtoMessage() {}

func (x *ValidatorCommissionRates) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorCommissionRates.ProtoReflect.Descriptor instead.
func (*ValidatorCommissionRates) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{8}
}

func (x *ValidatorCommissionRates) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ValidatorCommissionRates) GetMaxRate() string {
	if x != nil {
		return x.MaxRate
	}
	return ""
}

func (x *ValidatorCommissionRates) GetMaxChangeRate() string {
	if x != nil {
		return x.MaxChangeRate
	}
	return ""
}

type CosmosAprRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Testnet bool   `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet"`
}

func (x *CosmosAprRatesRequest) Reset() {
	*x = CosmosAprRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosAprRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosAprRatesRequest) ProtoMessage() {}

func (x *CosmosAprRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosAprRatesRequest.ProtoReflect.Descriptor instead.
func (*CosmosAprRatesRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{9}
}

func (x *CosmosAprRatesRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosAprRatesRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type CosmosAprRatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apr float64 `protobuf:"fixed64,1,opt,name=apr,proto3" json:"apr"`
}

func (x *CosmosAprRatesResponse) Reset() {
	*x = CosmosAprRatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosAprRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosAprRatesResponse) ProtoMessage() {}

func (x *CosmosAprRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosAprRatesResponse.ProtoReflect.Descriptor instead.
func (*CosmosAprRatesResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{10}
}

func (x *CosmosAprRatesResponse) GetApr() float64 {
	if x != nil {
		return x.Apr
	}
	return 0
}

type CosmosDelegationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
	Chain   string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain"`
	Testnet bool   `protobuf:"varint,3,opt,name=testnet,proto3" json:"testnet"`
}

func (x *CosmosDelegationsRequest) Reset() {
	*x = CosmosDelegationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosDelegationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosDelegationsRequest) ProtoMessage() {}

func (x *CosmosDelegationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosDelegationsRequest.ProtoReflect.Descriptor instead.
func (*CosmosDelegationsRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{11}
}

func (x *CosmosDelegationsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CosmosDelegationsRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosDelegationsRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type CosmosDelegationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetStakeValues        *OverallDenomsValues `protobuf:"bytes,1,opt,name=net_stake_values,json=netStakeValues,proto3" json:"net_stake_values"`
	IndividualStakeValues []*DenomsWiseValues  `protobuf:"bytes,2,rep,name=individual_stake_values,json=individualStakeValues,proto3" json:"individual_stake_values"`
	Delegations           []*DelegationsInfo   `protobuf:"bytes,3,rep,name=delegations,proto3" json:"delegations"`
	UnboundDelegations    []*UnDelegationsInfo `protobuf:"bytes,4,rep,name=unbound_delegations,json=unboundDelegations,proto3" json:"unbound_delegations"`
	Apr                   float64              `protobuf:"fixed64,5,opt,name=apr,proto3" json:"apr"`
}

func (x *CosmosDelegationsResponse) Reset() {
	*x = CosmosDelegationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosDelegationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosDelegationsResponse) ProtoMessage() {}

func (x *CosmosDelegationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosDelegationsResponse.ProtoReflect.Descriptor instead.
func (*CosmosDelegationsResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{12}
}

func (x *CosmosDelegationsResponse) GetNetStakeValues() *OverallDenomsValues {
	if x != nil {
		return x.NetStakeValues
	}
	return nil
}

func (x *CosmosDelegationsResponse) GetIndividualStakeValues() []*DenomsWiseValues {
	if x != nil {
		return x.IndividualStakeValues
	}
	return nil
}

func (x *CosmosDelegationsResponse) GetDelegations() []*DelegationsInfo {
	if x != nil {
		return x.Delegations
	}
	return nil
}

func (x *CosmosDelegationsResponse) GetUnboundDelegations() []*UnDelegationsInfo {
	if x != nil {
		return x.UnboundDelegations
	}
	return nil
}

func (x *CosmosDelegationsResponse) GetApr() float64 {
	if x != nil {
		return x.Apr
	}
	return 0
}

type OverallDenomsValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStakedQuote   string `protobuf:"bytes,1,opt,name=total_staked_quote,json=totalStakedQuote,proto3" json:"total_staked_quote"`
	TotalUnstakedQuote string `protobuf:"bytes,2,opt,name=total_unstaked_quote,json=totalUnstakedQuote,proto3" json:"total_unstaked_quote"`
	TotalRewardsQuote  string `protobuf:"bytes,3,opt,name=total_rewards_quote,json=totalRewardsQuote,proto3" json:"total_rewards_quote"`
}

func (x *OverallDenomsValues) Reset() {
	*x = OverallDenomsValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverallDenomsValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverallDenomsValues) ProtoMessage() {}

func (x *OverallDenomsValues) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverallDenomsValues.ProtoReflect.Descriptor instead.
func (*OverallDenomsValues) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{13}
}

func (x *OverallDenomsValues) GetTotalStakedQuote() string {
	if x != nil {
		return x.TotalStakedQuote
	}
	return ""
}

func (x *OverallDenomsValues) GetTotalUnstakedQuote() string {
	if x != nil {
		return x.TotalUnstakedQuote
	}
	return ""
}

func (x *OverallDenomsValues) GetTotalRewardsQuote() string {
	if x != nil {
		return x.TotalRewardsQuote
	}
	return ""
}

type DenomsWiseValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeBalance       string `protobuf:"bytes,1,opt,name=stake_balance,json=stakeBalance,proto3" json:"stake_balance"`
	UnstakeBalance     string `protobuf:"bytes,2,opt,name=unstake_balance,json=unstakeBalance,proto3" json:"unstake_balance"`
	RewardsBalance     string `protobuf:"bytes,3,opt,name=rewards_balance,json=rewardsBalance,proto3" json:"rewards_balance"`
	TotalStakedQuote   string `protobuf:"bytes,4,opt,name=total_staked_quote,json=totalStakedQuote,proto3" json:"total_staked_quote"`
	TotalUnstakedQuote string `protobuf:"bytes,5,opt,name=total_unstaked_quote,json=totalUnstakedQuote,proto3" json:"total_unstaked_quote"`
	TotalRewardsQuote  string `protobuf:"bytes,6,opt,name=total_rewards_quote,json=totalRewardsQuote,proto3" json:"total_rewards_quote"`
	Denom              string `protobuf:"bytes,7,opt,name=denom,proto3" json:"denom"`
}

func (x *DenomsWiseValues) Reset() {
	*x = DenomsWiseValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenomsWiseValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenomsWiseValues) ProtoMessage() {}

func (x *DenomsWiseValues) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenomsWiseValues.ProtoReflect.Descriptor instead.
func (*DenomsWiseValues) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{14}
}

func (x *DenomsWiseValues) GetStakeBalance() string {
	if x != nil {
		return x.StakeBalance
	}
	return ""
}

func (x *DenomsWiseValues) GetUnstakeBalance() string {
	if x != nil {
		return x.UnstakeBalance
	}
	return ""
}

func (x *DenomsWiseValues) GetRewardsBalance() string {
	if x != nil {
		return x.RewardsBalance
	}
	return ""
}

func (x *DenomsWiseValues) GetTotalStakedQuote() string {
	if x != nil {
		return x.TotalStakedQuote
	}
	return ""
}

func (x *DenomsWiseValues) GetTotalUnstakedQuote() string {
	if x != nil {
		return x.TotalUnstakedQuote
	}
	return ""
}

func (x *DenomsWiseValues) GetTotalRewardsQuote() string {
	if x != nil {
		return x.TotalRewardsQuote
	}
	return ""
}

func (x *DenomsWiseValues) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

type DelegationsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegation       *DelegationDetail          `protobuf:"bytes,1,opt,name=delegation,proto3" json:"delegation"`
	Balance          *BalanceDetail             `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance"`
	ValidatorDetails *ValidatorForDelegatorInfo `protobuf:"bytes,3,opt,name=validator_details,json=validatorDetails,proto3" json:"validator_details"`
	RewardsDetails   *RewardsInfo               `protobuf:"bytes,4,opt,name=rewards_details,json=rewardsDetails,proto3" json:"rewards_details"`
}

func (x *DelegationsInfo) Reset() {
	*x = DelegationsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationsInfo) ProtoMessage() {}

func (x *DelegationsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationsInfo.ProtoReflect.Descriptor instead.
func (*DelegationsInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{15}
}

func (x *DelegationsInfo) GetDelegation() *DelegationDetail {
	if x != nil {
		return x.Delegation
	}
	return nil
}

func (x *DelegationsInfo) GetBalance() *BalanceDetail {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *DelegationsInfo) GetValidatorDetails() *ValidatorForDelegatorInfo {
	if x != nil {
		return x.ValidatorDetails
	}
	return nil
}

func (x *DelegationsInfo) GetRewardsDetails() *RewardsInfo {
	if x != nil {
		return x.RewardsDetails
	}
	return nil
}

type DelegationDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address"`
	Shares           string `protobuf:"bytes,3,opt,name=shares,proto3" json:"shares"`
}

func (x *DelegationDetail) Reset() {
	*x = DelegationDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationDetail) ProtoMessage() {}

func (x *DelegationDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationDetail.ProtoReflect.Descriptor instead.
func (*DelegationDetail) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{16}
}

func (x *DelegationDetail) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *DelegationDetail) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *DelegationDetail) GetShares() string {
	if x != nil {
		return x.Shares
	}
	return ""
}

type BalanceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom        string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
	Decimals     int64  `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals"`
	QuoteRate    string `protobuf:"bytes,4,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	Quote        string `protobuf:"bytes,5,opt,name=quote,proto3" json:"quote"`
	TickerSymbol string `protobuf:"bytes,6,opt,name=ticker_symbol,json=tickerSymbol,proto3" json:"ticker_symbol"`
	LogoUrl      string `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
}

func (x *BalanceDetail) Reset() {
	*x = BalanceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceDetail) ProtoMessage() {}

func (x *BalanceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceDetail.ProtoReflect.Descriptor instead.
func (*BalanceDetail) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{17}
}

func (x *BalanceDetail) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *BalanceDetail) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *BalanceDetail) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *BalanceDetail) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *BalanceDetail) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *BalanceDetail) GetTickerSymbol() string {
	if x != nil {
		return x.TickerSymbol
	}
	return ""
}

func (x *BalanceDetail) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

type RewardsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorAddress string             `protobuf:"bytes,1,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address"`
	Reward           []*RewardsListInfo `protobuf:"bytes,2,rep,name=reward,proto3" json:"reward"`
}

func (x *RewardsInfo) Reset() {
	*x = RewardsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardsInfo) ProtoMessage() {}

func (x *RewardsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardsInfo.ProtoReflect.Descriptor instead.
func (*RewardsInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{18}
}

func (x *RewardsInfo) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *RewardsInfo) GetReward() []*RewardsListInfo {
	if x != nil {
		return x.Reward
	}
	return nil
}

type RewardsListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom        string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
	Decimals     int64  `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals"`
	Quote        string `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote"`
	TickerSymbol string `protobuf:"bytes,5,opt,name=ticker_symbol,json=tickerSymbol,proto3" json:"ticker_symbol"`
	LogoUrl      string `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	QuoteRate    string `protobuf:"bytes,7,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
}

func (x *RewardsListInfo) Reset() {
	*x = RewardsListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardsListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardsListInfo) ProtoMessage() {}

func (x *RewardsListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardsListInfo.ProtoReflect.Descriptor instead.
func (*RewardsListInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{19}
}

func (x *RewardsListInfo) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *RewardsListInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RewardsListInfo) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *RewardsListInfo) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *RewardsListInfo) GetTickerSymbol() string {
	if x != nil {
		return x.TickerSymbol
	}
	return ""
}

func (x *RewardsListInfo) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *RewardsListInfo) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

type UnDelegationsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegation       *DelegationDetail          `protobuf:"bytes,1,opt,name=delegation,proto3" json:"delegation"`
	DelegatorAddress string                     `protobuf:"bytes,2,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address"`
	ValidatorAddress string                     `protobuf:"bytes,3,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address"`
	Entries          []*Entries                 `protobuf:"bytes,4,rep,name=entries,proto3" json:"entries"`
	Balance          *BalanceDetail             `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance"`
	ValidatorDetails *ValidatorForDelegatorInfo `protobuf:"bytes,6,opt,name=validator_details,json=validatorDetails,proto3" json:"validator_details"`
}

func (x *UnDelegationsInfo) Reset() {
	*x = UnDelegationsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnDelegationsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnDelegationsInfo) ProtoMessage() {}

func (x *UnDelegationsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnDelegationsInfo.ProtoReflect.Descriptor instead.
func (*UnDelegationsInfo) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{20}
}

func (x *UnDelegationsInfo) GetDelegation() *DelegationDetail {
	if x != nil {
		return x.Delegation
	}
	return nil
}

func (x *UnDelegationsInfo) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *UnDelegationsInfo) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *UnDelegationsInfo) GetEntries() []*Entries {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *UnDelegationsInfo) GetBalance() *BalanceDetail {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *UnDelegationsInfo) GetValidatorDetails() *ValidatorForDelegatorInfo {
	if x != nil {
		return x.ValidatorDetails
	}
	return nil
}

type Entries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationHeight string `protobuf:"bytes,1,opt,name=creation_height,json=creationHeight,proto3" json:"creation_height"`
	CompletionTime string `protobuf:"bytes,2,opt,name=completion_time,json=completionTime,proto3" json:"completion_time"`
	InitialBalance string `protobuf:"bytes,3,opt,name=initial_balance,json=initialBalance,proto3" json:"initial_balance"`
	Balance        string `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance"`
}

func (x *Entries) Reset() {
	*x = Entries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entries) ProtoMessage() {}

func (x *Entries) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entries.ProtoReflect.Descriptor instead.
func (*Entries) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{21}
}

func (x *Entries) GetCreationHeight() string {
	if x != nil {
		return x.CreationHeight
	}
	return ""
}

func (x *Entries) GetCompletionTime() string {
	if x != nil {
		return x.CompletionTime
	}
	return ""
}

func (x *Entries) GetInitialBalance() string {
	if x != nil {
		return x.InitialBalance
	}
	return ""
}

func (x *Entries) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type CosmosSendTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	TxBytes   string `protobuf:"bytes,2,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes"`
	Mode      string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode"`
	TxDetails []byte `protobuf:"bytes,4,opt,name=tx_details,json=txDetails,proto3" json:"tx_details"` //only for bluzelle chain payload
}

func (x *CosmosSendTxRequest) Reset() {
	*x = CosmosSendTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosSendTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosSendTxRequest) ProtoMessage() {}

func (x *CosmosSendTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosSendTxRequest.ProtoReflect.Descriptor instead.
func (*CosmosSendTxRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{22}
}

func (x *CosmosSendTxRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosSendTxRequest) GetTxBytes() string {
	if x != nil {
		return x.TxBytes
	}
	return ""
}

func (x *CosmosSendTxRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *CosmosSendTxRequest) GetTxDetails() []byte {
	if x != nil {
		return x.TxDetails
	}
	return nil
}

type CosmosCDPParametersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Testnet bool   `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet"`
}

func (x *CosmosCDPParametersRequest) Reset() {
	*x = CosmosCDPParametersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosCDPParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosCDPParametersRequest) ProtoMessage() {}

func (x *CosmosCDPParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosCDPParametersRequest.ProtoReflect.Descriptor instead.
func (*CosmosCDPParametersRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{23}
}

func (x *CosmosCDPParametersRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosCDPParametersRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type CosmosCDPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
	Testnet bool   `protobuf:"varint,3,opt,name=testnet,proto3" json:"testnet"`
}

func (x *CosmosCDPRequest) Reset() {
	*x = CosmosCDPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosCDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosCDPRequest) ProtoMessage() {}

func (x *CosmosCDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosCDPRequest.ProtoReflect.Descriptor instead.
func (*CosmosCDPRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{24}
}

func (x *CosmosCDPRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosCDPRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CosmosCDPRequest) GetTestnet() bool {
	if x != nil {
		return x.Testnet
	}
	return false
}

type CosmosCDPParametersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollateralParams        []*CollateralParams `protobuf:"bytes,1,rep,name=collateral_params,json=collateralParams,proto3" json:"collateral_params"`
	DebtParam               *DebtParam          `protobuf:"bytes,2,opt,name=debt_param,json=debtParam,proto3" json:"debt_param"`
	GlobalDebtLimit         *GlobalDebtLimit    `protobuf:"bytes,3,opt,name=global_debt_limit,json=globalDebtLimit,proto3" json:"global_debt_limit"`
	SurplusAuctionThreshold string              `protobuf:"bytes,4,opt,name=surplus_auction_threshold,json=surplusAuctionThreshold,proto3" json:"surplus_auction_threshold"`
	SurplusAuctionLot       string              `protobuf:"bytes,5,opt,name=surplus_auction_lot,json=surplusAuctionLot,proto3" json:"surplus_auction_lot"`
	DebtAuctionThreshold    string              `protobuf:"bytes,6,opt,name=debt_auction_threshold,json=debtAuctionThreshold,proto3" json:"debt_auction_threshold"`
	DebtAuctionLot          string              `protobuf:"bytes,7,opt,name=debt_auction_lot,json=debtAuctionLot,proto3" json:"debt_auction_lot"`
}

func (x *CosmosCDPParametersResponse) Reset() {
	*x = CosmosCDPParametersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosCDPParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosCDPParametersResponse) ProtoMessage() {}

func (x *CosmosCDPParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosCDPParametersResponse.ProtoReflect.Descriptor instead.
func (*CosmosCDPParametersResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{25}
}

func (x *CosmosCDPParametersResponse) GetCollateralParams() []*CollateralParams {
	if x != nil {
		return x.CollateralParams
	}
	return nil
}

func (x *CosmosCDPParametersResponse) GetDebtParam() *DebtParam {
	if x != nil {
		return x.DebtParam
	}
	return nil
}

func (x *CosmosCDPParametersResponse) GetGlobalDebtLimit() *GlobalDebtLimit {
	if x != nil {
		return x.GlobalDebtLimit
	}
	return nil
}

func (x *CosmosCDPParametersResponse) GetSurplusAuctionThreshold() string {
	if x != nil {
		return x.SurplusAuctionThreshold
	}
	return ""
}

func (x *CosmosCDPParametersResponse) GetSurplusAuctionLot() string {
	if x != nil {
		return x.SurplusAuctionLot
	}
	return ""
}

func (x *CosmosCDPParametersResponse) GetDebtAuctionThreshold() string {
	if x != nil {
		return x.DebtAuctionThreshold
	}
	return ""
}

func (x *CosmosCDPParametersResponse) GetDebtAuctionLot() string {
	if x != nil {
		return x.DebtAuctionLot
	}
	return ""
}

type CollateralParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom                            string     `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Type                             string     `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	LiquidationRatio                 string     `protobuf:"bytes,3,opt,name=liquidation_ratio,json=liquidationRatio,proto3" json:"liquidation_ratio"`
	DebtLimit                        *DebtLimit `protobuf:"bytes,4,opt,name=debt_limit,json=debtLimit,proto3" json:"debt_limit"`
	StabilityFee                     string     `protobuf:"bytes,5,opt,name=stability_fee,json=stabilityFee,proto3" json:"stability_fee"`
	AuctionSize                      string     `protobuf:"bytes,6,opt,name=auction_size,json=auctionSize,proto3" json:"auction_size"`
	LiquidationPenalty               string     `protobuf:"bytes,7,opt,name=liquidation_penalty,json=liquidationPenalty,proto3" json:"liquidation_penalty"`
	SpotMarketId                     string     `protobuf:"bytes,8,opt,name=spot_market_id,json=spotMarketId,proto3" json:"spot_market_id"`
	LiquidationMarketId              string     `protobuf:"bytes,9,opt,name=liquidation_market_id,json=liquidationMarketId,proto3" json:"liquidation_market_id"`
	KeeperRewardPercentage           string     `protobuf:"bytes,10,opt,name=keeper_reward_percentage,json=keeperRewardPercentage,proto3" json:"keeper_reward_percentage"`
	CheckCollateralizationIndexCount string     `protobuf:"bytes,11,opt,name=check_collateralization_index_count,json=checkCollateralizationIndexCount,proto3" json:"check_collateralization_index_count"`
	ConversionFactor                 string     `protobuf:"bytes,12,opt,name=conversion_factor,json=conversionFactor,proto3" json:"conversion_factor"`
}

func (x *CollateralParams) Reset() {
	*x = CollateralParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollateralParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollateralParams) ProtoMessage() {}

func (x *CollateralParams) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollateralParams.ProtoReflect.Descriptor instead.
func (*CollateralParams) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{26}
}

func (x *CollateralParams) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CollateralParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CollateralParams) GetLiquidationRatio() string {
	if x != nil {
		return x.LiquidationRatio
	}
	return ""
}

func (x *CollateralParams) GetDebtLimit() *DebtLimit {
	if x != nil {
		return x.DebtLimit
	}
	return nil
}

func (x *CollateralParams) GetStabilityFee() string {
	if x != nil {
		return x.StabilityFee
	}
	return ""
}

func (x *CollateralParams) GetAuctionSize() string {
	if x != nil {
		return x.AuctionSize
	}
	return ""
}

func (x *CollateralParams) GetLiquidationPenalty() string {
	if x != nil {
		return x.LiquidationPenalty
	}
	return ""
}

func (x *CollateralParams) GetSpotMarketId() string {
	if x != nil {
		return x.SpotMarketId
	}
	return ""
}

func (x *CollateralParams) GetLiquidationMarketId() string {
	if x != nil {
		return x.LiquidationMarketId
	}
	return ""
}

func (x *CollateralParams) GetKeeperRewardPercentage() string {
	if x != nil {
		return x.KeeperRewardPercentage
	}
	return ""
}

func (x *CollateralParams) GetCheckCollateralizationIndexCount() string {
	if x != nil {
		return x.CheckCollateralizationIndexCount
	}
	return ""
}

func (x *CollateralParams) GetConversionFactor() string {
	if x != nil {
		return x.ConversionFactor
	}
	return ""
}

type DebtLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *DebtLimit) Reset() {
	*x = DebtLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtLimit) ProtoMessage() {}

func (x *DebtLimit) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtLimit.ProtoReflect.Descriptor instead.
func (*DebtLimit) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{27}
}

func (x *DebtLimit) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *DebtLimit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type DebtParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom            string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	ReferenceAsset   string `protobuf:"bytes,2,opt,name=reference_asset,json=referenceAsset,proto3" json:"reference_asset"`
	ConversionFactor string `protobuf:"bytes,3,opt,name=conversion_factor,json=conversionFactor,proto3" json:"conversion_factor"`
	DebtFloor        string `protobuf:"bytes,4,opt,name=debt_floor,json=debtFloor,proto3" json:"debt_floor"`
}

func (x *DebtParam) Reset() {
	*x = DebtParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtParam) ProtoMessage() {}

func (x *DebtParam) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtParam.ProtoReflect.Descriptor instead.
func (*DebtParam) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{28}
}

func (x *DebtParam) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *DebtParam) GetReferenceAsset() string {
	if x != nil {
		return x.ReferenceAsset
	}
	return ""
}

func (x *DebtParam) GetConversionFactor() string {
	if x != nil {
		return x.ConversionFactor
	}
	return ""
}

func (x *DebtParam) GetDebtFloor() string {
	if x != nil {
		return x.DebtFloor
	}
	return ""
}

type GlobalDebtLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *GlobalDebtLimit) Reset() {
	*x = GlobalDebtLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalDebtLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalDebtLimit) ProtoMessage() {}

func (x *GlobalDebtLimit) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalDebtLimit.ProtoReflect.Descriptor instead.
func (*GlobalDebtLimit) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{29}
}

func (x *GlobalDebtLimit) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *GlobalDebtLimit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CosmosCDPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height string     `protobuf:"bytes,1,opt,name=height,proto3" json:"height"`
	Result *CDPResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result"`
}

func (x *CosmosCDPResponse) Reset() {
	*x = CosmosCDPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosCDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosCDPResponse) ProtoMessage() {}

func (x *CosmosCDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosCDPResponse.ProtoReflect.Descriptor instead.
func (*CosmosCDPResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{30}
}

func (x *CosmosCDPResponse) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *CosmosCDPResponse) GetResult() *CDPResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CDPResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string                       `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value         *CDPResultValue              `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	CdpDetails    *CDPDetails                  `protobuf:"bytes,3,opt,name=cdp_details,json=cdpDetails,proto3" json:"cdp_details"`
	CdpParameters *CosmosCDPParametersResponse `protobuf:"bytes,4,opt,name=cdp_parameters,json=cdpParameters,proto3" json:"cdp_parameters"`
}

func (x *CDPResult) Reset() {
	*x = CDPResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPResult) ProtoMessage() {}

func (x *CDPResult) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPResult.ProtoReflect.Descriptor instead.
func (*CDPResult) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{31}
}

func (x *CDPResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CDPResult) GetValue() *CDPResultValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CDPResult) GetCdpDetails() *CDPDetails {
	if x != nil {
		return x.CdpDetails
	}
	return nil
}

func (x *CDPResult) GetCdpParameters() *CosmosCDPParametersResponse {
	if x != nil {
		return x.CdpParameters
	}
	return nil
}

type CDPResultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        string                          `protobuf:"bytes,1,opt,name=address,proto3" json:"address"`
	PublicKey      string                          `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key"`
	AccountNumber  string                          `protobuf:"bytes,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number"`
	Sequence       string                          `protobuf:"bytes,4,opt,name=sequence,proto3" json:"sequence"`
	CoinTotal      *CDPResultValueCoinTotal        `protobuf:"bytes,5,opt,name=coin_total,json=coinTotal,proto3" json:"coin_total"`
	Coins          []*CDPResultValueCoins          `protobuf:"bytes,6,rep,name=coins,proto3" json:"coins"`
	VestingPeriods []*CDPResultValueVestingPeridos `protobuf:"bytes,7,rep,name=vesting_periods,json=vestingPeriods,proto3" json:"vesting_periods"`
}

func (x *CDPResultValue) Reset() {
	*x = CDPResultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPResultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPResultValue) ProtoMessage() {}

func (x *CDPResultValue) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPResultValue.ProtoReflect.Descriptor instead.
func (*CDPResultValue) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{32}
}

func (x *CDPResultValue) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CDPResultValue) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CDPResultValue) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *CDPResultValue) GetSequence() string {
	if x != nil {
		return x.Sequence
	}
	return ""
}

func (x *CDPResultValue) GetCoinTotal() *CDPResultValueCoinTotal {
	if x != nil {
		return x.CoinTotal
	}
	return nil
}

func (x *CDPResultValue) GetCoins() []*CDPResultValueCoins {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *CDPResultValue) GetVestingPeriods() []*CDPResultValueVestingPeridos {
	if x != nil {
		return x.VestingPeriods
	}
	return nil
}

type CDPResultValueCoinTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountTotal       string `protobuf:"bytes,1,opt,name=account_total,json=accountTotal,proto3" json:"account_total"`
	CoinQuoteRateTotal string `protobuf:"bytes,2,opt,name=coin_quote_rate_total,json=coinQuoteRateTotal,proto3" json:"coin_quote_rate_total"`
}

func (x *CDPResultValueCoinTotal) Reset() {
	*x = CDPResultValueCoinTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPResultValueCoinTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPResultValueCoinTotal) ProtoMessage() {}

func (x *CDPResultValueCoinTotal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPResultValueCoinTotal.ProtoReflect.Descriptor instead.
func (*CDPResultValueCoinTotal) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{33}
}

func (x *CDPResultValueCoinTotal) GetAccountTotal() string {
	if x != nil {
		return x.AccountTotal
	}
	return ""
}

func (x *CDPResultValueCoinTotal) GetCoinQuoteRateTotal() string {
	if x != nil {
		return x.CoinQuoteRateTotal
	}
	return ""
}

type CDPResultValueCoins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom        string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
	TickerSymbol string `protobuf:"bytes,3,opt,name=ticker_symbol,json=tickerSymbol,proto3" json:"ticker_symbol"`
	QuoteRate    string `protobuf:"bytes,4,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	Decimals     int32  `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals"`
	Name         string `protobuf:"bytes,6,opt,name=name,proto3" json:"name"`
	LogoUrl      string `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	Quote        string `protobuf:"bytes,8,opt,name=quote,proto3" json:"quote"`
}

func (x *CDPResultValueCoins) Reset() {
	*x = CDPResultValueCoins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPResultValueCoins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPResultValueCoins) ProtoMessage() {}

func (x *CDPResultValueCoins) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPResultValueCoins.ProtoReflect.Descriptor instead.
func (*CDPResultValueCoins) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{34}
}

func (x *CDPResultValueCoins) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CDPResultValueCoins) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CDPResultValueCoins) GetTickerSymbol() string {
	if x != nil {
		return x.TickerSymbol
	}
	return ""
}

func (x *CDPResultValueCoins) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *CDPResultValueCoins) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *CDPResultValueCoins) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CDPResultValueCoins) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *CDPResultValueCoins) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

type CDPResultValueVestingPeridos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length"`
}

func (x *CDPResultValueVestingPeridos) Reset() {
	*x = CDPResultValueVestingPeridos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPResultValueVestingPeridos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPResultValueVestingPeridos) ProtoMessage() {}

func (x *CDPResultValueVestingPeridos) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPResultValueVestingPeridos.ProtoReflect.Descriptor instead.
func (*CDPResultValueVestingPeridos) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{35}
}

func (x *CDPResultValueVestingPeridos) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type CDPDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cdp *CDPDetailsEnt `protobuf:"bytes,1,opt,name=cdp,proto3" json:"cdp"`
}

func (x *CDPDetails) Reset() {
	*x = CDPDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetails) ProtoMessage() {}

func (x *CDPDetails) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetails.ProtoReflect.Descriptor instead.
func (*CDPDetails) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{36}
}

func (x *CDPDetails) GetCdp() *CDPDetailsEnt {
	if x != nil {
		return x.Cdp
	}
	return nil
}

type CDPDetailsEnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Owner                  string                        `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner"`
	Type                   string                        `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	Collateral             *CDPDetailsEntCollateral      `protobuf:"bytes,4,opt,name=collateral,proto3" json:"collateral"`
	Principal              *CDPDetailsEntPrincipal       `protobuf:"bytes,5,opt,name=principal,proto3" json:"principal"`
	AccumulatedFees        *CDPDetailsEntAccumulated     `protobuf:"bytes,6,opt,name=accumulated_fees,json=accumulatedFees,proto3" json:"accumulated_fees"`
	FeesUpdated            string                        `protobuf:"bytes,7,opt,name=fees_updated,json=feesUpdated,proto3" json:"fees_updated"`
	InterestFactor         string                        `protobuf:"bytes,8,opt,name=interest_factor,json=interestFactor,proto3" json:"interest_factor"`
	CollateralValue        *CDPDetailsEntCollateralValue `protobuf:"bytes,9,opt,name=collateral_value,json=collateralValue,proto3" json:"collateral_value"`
	CollateralizationRatio string                        `protobuf:"bytes,10,opt,name=collateralization_ratio,json=collateralizationRatio,proto3" json:"collateralization_ratio"`
}

func (x *CDPDetailsEnt) Reset() {
	*x = CDPDetailsEnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetailsEnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetailsEnt) ProtoMessage() {}

func (x *CDPDetailsEnt) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetailsEnt.ProtoReflect.Descriptor instead.
func (*CDPDetailsEnt) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{37}
}

func (x *CDPDetailsEnt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CDPDetailsEnt) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CDPDetailsEnt) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CDPDetailsEnt) GetCollateral() *CDPDetailsEntCollateral {
	if x != nil {
		return x.Collateral
	}
	return nil
}

func (x *CDPDetailsEnt) GetPrincipal() *CDPDetailsEntPrincipal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *CDPDetailsEnt) GetAccumulatedFees() *CDPDetailsEntAccumulated {
	if x != nil {
		return x.AccumulatedFees
	}
	return nil
}

func (x *CDPDetailsEnt) GetFeesUpdated() string {
	if x != nil {
		return x.FeesUpdated
	}
	return ""
}

func (x *CDPDetailsEnt) GetInterestFactor() string {
	if x != nil {
		return x.InterestFactor
	}
	return ""
}

func (x *CDPDetailsEnt) GetCollateralValue() *CDPDetailsEntCollateralValue {
	if x != nil {
		return x.CollateralValue
	}
	return nil
}

func (x *CDPDetailsEnt) GetCollateralizationRatio() string {
	if x != nil {
		return x.CollateralizationRatio
	}
	return ""
}

type CDPDetailsEntCollateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *CDPDetailsEntCollateral) Reset() {
	*x = CDPDetailsEntCollateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetailsEntCollateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetailsEntCollateral) ProtoMessage() {}

func (x *CDPDetailsEntCollateral) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetailsEntCollateral.ProtoReflect.Descriptor instead.
func (*CDPDetailsEntCollateral) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{38}
}

func (x *CDPDetailsEntCollateral) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CDPDetailsEntCollateral) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CDPDetailsEntPrincipal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *CDPDetailsEntPrincipal) Reset() {
	*x = CDPDetailsEntPrincipal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetailsEntPrincipal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetailsEntPrincipal) ProtoMessage() {}

func (x *CDPDetailsEntPrincipal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetailsEntPrincipal.ProtoReflect.Descriptor instead.
func (*CDPDetailsEntPrincipal) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{39}
}

func (x *CDPDetailsEntPrincipal) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CDPDetailsEntPrincipal) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CDPDetailsEntAccumulated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *CDPDetailsEntAccumulated) Reset() {
	*x = CDPDetailsEntAccumulated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetailsEntAccumulated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetailsEntAccumulated) ProtoMessage() {}

func (x *CDPDetailsEntAccumulated) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetailsEntAccumulated.ProtoReflect.Descriptor instead.
func (*CDPDetailsEntAccumulated) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{40}
}

func (x *CDPDetailsEntAccumulated) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CDPDetailsEntAccumulated) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CDPDetailsEntCollateralValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (x *CDPDetailsEntCollateralValue) Reset() {
	*x = CDPDetailsEntCollateralValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDPDetailsEntCollateralValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDPDetailsEntCollateralValue) ProtoMessage() {}

func (x *CDPDetailsEntCollateralValue) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDPDetailsEntCollateralValue.ProtoReflect.Descriptor instead.
func (*CDPDetailsEntCollateralValue) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{41}
}

func (x *CDPDetailsEntCollateralValue) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *CDPDetailsEntCollateralValue) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type CosmosSimulateTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain   string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
	TxBytes string `protobuf:"bytes,2,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes"`
}

func (x *CosmosSimulateTxRequest) Reset() {
	*x = CosmosSimulateTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosSimulateTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosSimulateTxRequest) ProtoMessage() {}

func (x *CosmosSimulateTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosSimulateTxRequest.ProtoReflect.Descriptor instead.
func (*CosmosSimulateTxRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{42}
}

func (x *CosmosSimulateTxRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CosmosSimulateTxRequest) GetTxBytes() string {
	if x != nil {
		return x.TxBytes
	}
	return ""
}

type CosmosSimulateGasPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fast        float32 `protobuf:"fixed32,1,opt,name=fast,proto3" json:"fast"`
	SafeLow     float32 `protobuf:"fixed32,2,opt,name=safe_low,json=safeLow,proto3" json:"safe_low"`
	Fastest     float32 `protobuf:"fixed32,3,opt,name=fastest,proto3" json:"fastest"`
	Average     float32 `protobuf:"fixed32,4,opt,name=average,proto3" json:"average"`
	SafeLowWait float32 `protobuf:"fixed32,5,opt,name=safe_low_wait,json=safeLowWait,proto3" json:"safe_low_wait"`
	AvgWait     float32 `protobuf:"fixed32,6,opt,name=avg_wait,json=avgWait,proto3" json:"avg_wait"`
	FastWait    float32 `protobuf:"fixed32,7,opt,name=fast_wait,json=fastWait,proto3" json:"fast_wait"`
	FastestWait float32 `protobuf:"fixed32,8,opt,name=fastest_wait,json=fastestWait,proto3" json:"fastest_wait"`
}

func (x *CosmosSimulateGasPrice) Reset() {
	*x = CosmosSimulateGasPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosSimulateGasPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosSimulateGasPrice) ProtoMessage() {}

func (x *CosmosSimulateGasPrice) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosSimulateGasPrice.ProtoReflect.Descriptor instead.
func (*CosmosSimulateGasPrice) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{43}
}

func (x *CosmosSimulateGasPrice) GetFast() float32 {
	if x != nil {
		return x.Fast
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetSafeLow() float32 {
	if x != nil {
		return x.SafeLow
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetFastest() float32 {
	if x != nil {
		return x.Fastest
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetSafeLowWait() float32 {
	if x != nil {
		return x.SafeLowWait
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetAvgWait() float32 {
	if x != nil {
		return x.AvgWait
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetFastWait() float32 {
	if x != nil {
		return x.FastWait
	}
	return 0
}

func (x *CosmosSimulateGasPrice) GetFastestWait() float32 {
	if x != nil {
		return x.FastestWait
	}
	return 0
}

type CosmosSimulateTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimulationResult bool                    `protobuf:"varint,1,opt,name=simulation_result,json=simulationResult,proto3" json:"simulation_result"`
	GasLimit         int64                   `protobuf:"varint,2,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit"`
	GasPrice         *CosmosSimulateGasPrice `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price"`
	Fee              int64                   `protobuf:"varint,4,opt,name=fee,proto3" json:"fee"`
	QuoteRate        string                  `protobuf:"bytes,5,opt,name=quote_rate,json=quoteRate,proto3" json:"quote_rate"`
	Message          string                  `protobuf:"bytes,6,opt,name=message,proto3" json:"message"`
}

func (x *CosmosSimulateTxResponse) Reset() {
	*x = CosmosSimulateTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosSimulateTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosSimulateTxResponse) ProtoMessage() {}

func (x *CosmosSimulateTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosSimulateTxResponse.ProtoReflect.Descriptor instead.
func (*CosmosSimulateTxResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{44}
}

func (x *CosmosSimulateTxResponse) GetSimulationResult() bool {
	if x != nil {
		return x.SimulationResult
	}
	return false
}

func (x *CosmosSimulateTxResponse) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *CosmosSimulateTxResponse) GetGasPrice() *CosmosSimulateGasPrice {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *CosmosSimulateTxResponse) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *CosmosSimulateTxResponse) GetQuoteRate() string {
	if x != nil {
		return x.QuoteRate
	}
	return ""
}

func (x *CosmosSimulateTxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCosmosBlockHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain string `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain"`
}

func (x *GetCosmosBlockHeightRequest) Reset() {
	*x = GetCosmosBlockHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosmosBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosmosBlockHeightRequest) ProtoMessage() {}

func (x *GetCosmosBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosmosBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*GetCosmosBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{45}
}

func (x *GetCosmosBlockHeightRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

type GetCosmosBlockHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height"`
}

func (x *GetCosmosBlockHeightResponse) Reset() {
	*x = GetCosmosBlockHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosmosBlockHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosmosBlockHeightResponse) ProtoMessage() {}

func (x *GetCosmosBlockHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cosmos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosmosBlockHeightResponse.ProtoReflect.Descriptor instead.
func (*GetCosmosBlockHeightResponse) Descriptor() ([]byte, []int) {
	return file_cosmos_proto_rawDescGZIP(), []int{46}
}

func (x *GetCosmosBlockHeightResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

var File_cosmos_proto protoreflect.FileDescriptor

var file_cosmos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x92, 0x03, 0x0a, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x32, 0x34, 0x68, 0x12, 0x2f, 0x0a, 0x14,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x32, 0x34, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x50, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x63, 0x0a, 0x17, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x18, 0x43, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x22, 0xe9, 0x04, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6a,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x62, 0x6f,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x6c,
	0x66, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61,
	0x70, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0xb3, 0x04, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x70, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61,
	0x78, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x43,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x41, 0x70, 0x72, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65,
	0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x65, 0x73,
	0x74, 0x6e, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x16, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x41, 0x70,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x70, 0x72,
	0x22, 0x64, 0x0a, 0x18, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74,
	0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x19, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x17, 0x69, 0x6e,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x57, 0x69, 0x73, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x15, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x13, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x75, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61,
	0x70, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x10, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x57, 0x69, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75,
	0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x86, 0x02, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a,
	0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x6a, 0x0a,
	0x0b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0xcf, 0x02, 0x0a,
	0x11, 0x55, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x9e,
	0x01, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x79, 0x0a, 0x13, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x78, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x74, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x43, 0x44, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x22, 0x5c, 0x0a, 0x10, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x43, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74,
	0x65, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x22, 0xa4, 0x03, 0x0a, 0x1b, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x43, 0x44, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x0a,
	0x64, 0x65, 0x62, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x09, 0x64, 0x65, 0x62, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x42, 0x0a,
	0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x74, 0x12, 0x34, 0x0a,
	0x16, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64,
	0x65, 0x62, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x62, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x74, 0x22, 0xa3, 0x04,
	0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x62,
	0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x09, 0x64, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x61,
	0x6c, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x6f,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x23, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x39, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96,
	0x01, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x74,
	0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x62, 0x74, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x44, 0x65, 0x62, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x11, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44,
	0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xcb, 0x01, 0x0a, 0x09, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x64, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x63, 0x64, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x64, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x43, 0x44, 0x50, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d,
	0x63, 0x64, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xcb, 0x02,
	0x0a, 0x0e, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x4c, 0x0a,
	0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x64, 0x6f, 0x73, 0x52, 0x0e, 0x76, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x17, 0x43,
	0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x69,
	0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x69, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe8,
	0x01, 0x0a, 0x13, 0x43, 0x44, 0x50, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x1c, 0x43, 0x44, 0x50,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x64, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x03, 0x63, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x52, 0x03, 0x63, 0x64, 0x70, 0x22, 0xe7, 0x03, 0x0a, 0x0d, 0x43, 0x44, 0x50, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x12, 0x4a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x0f, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x65, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x44, 0x50, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x22, 0x47, 0x0a, 0x17, 0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x16, 0x43, 0x44,
	0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x48, 0x0a, 0x18, 0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x1c,
	0x43, 0x44, 0x50, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x17, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x66, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x6c, 0x6f,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x61, 0x66, 0x65, 0x4c, 0x6f, 0x77,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x66, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x6c, 0x6f, 0x77,
	0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x4c, 0x6f, 0x77, 0x57, 0x61, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x76, 0x67, 0x5f,
	0x77, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x67, 0x57,
	0x61, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66, 0x61, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x57,
	0x61, 0x69, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x67, 0x61,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_proto_rawDescOnce sync.Once
	file_cosmos_proto_rawDescData = file_cosmos_proto_rawDesc
)

func file_cosmos_proto_rawDescGZIP() []byte {
	file_cosmos_proto_rawDescOnce.Do(func() {
		file_cosmos_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_proto_rawDescData)
	})
	return file_cosmos_proto_rawDescData
}

var file_cosmos_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_cosmos_proto_goTypes = []interface{}{
	(*CosmosAssetResponse)(nil),          // 0: proto.CosmosAssetResponse
	(*CosmosTokenBalance)(nil),           // 1: proto.CosmosTokenBalance
	(*CosmosValidatorsRequest)(nil),      // 2: proto.CosmosValidatorsRequest
	(*CosmosValidatorsResponse)(nil),     // 3: proto.CosmosValidatorsResponse
	(*ValidatorInfo)(nil),                // 4: proto.ValidatorInfo
	(*ValidatorForDelegatorInfo)(nil),    // 5: proto.ValidatorForDelegatorInfo
	(*ValidatorDescription)(nil),         // 6: proto.ValidatorDescription
	(*ValidatorCommission)(nil),          // 7: proto.ValidatorCommission
	(*ValidatorCommissionRates)(nil),     // 8: proto.ValidatorCommissionRates
	(*CosmosAprRatesRequest)(nil),        // 9: proto.CosmosAprRatesRequest
	(*CosmosAprRatesResponse)(nil),       // 10: proto.CosmosAprRatesResponse
	(*CosmosDelegationsRequest)(nil),     // 11: proto.CosmosDelegationsRequest
	(*CosmosDelegationsResponse)(nil),    // 12: proto.CosmosDelegationsResponse
	(*OverallDenomsValues)(nil),          // 13: proto.OverallDenomsValues
	(*DenomsWiseValues)(nil),             // 14: proto.DenomsWiseValues
	(*DelegationsInfo)(nil),              // 15: proto.DelegationsInfo
	(*DelegationDetail)(nil),             // 16: proto.DelegationDetail
	(*BalanceDetail)(nil),                // 17: proto.BalanceDetail
	(*RewardsInfo)(nil),                  // 18: proto.RewardsInfo
	(*RewardsListInfo)(nil),              // 19: proto.RewardsListInfo
	(*UnDelegationsInfo)(nil),            // 20: proto.UnDelegationsInfo
	(*Entries)(nil),                      // 21: proto.Entries
	(*CosmosSendTxRequest)(nil),          // 22: proto.CosmosSendTxRequest
	(*CosmosCDPParametersRequest)(nil),   // 23: proto.CosmosCDPParametersRequest
	(*CosmosCDPRequest)(nil),             // 24: proto.CosmosCDPRequest
	(*CosmosCDPParametersResponse)(nil),  // 25: proto.CosmosCDPParametersResponse
	(*CollateralParams)(nil),             // 26: proto.CollateralParams
	(*DebtLimit)(nil),                    // 27: proto.DebtLimit
	(*DebtParam)(nil),                    // 28: proto.DebtParam
	(*GlobalDebtLimit)(nil),              // 29: proto.GlobalDebtLimit
	(*CosmosCDPResponse)(nil),            // 30: proto.CosmosCDPResponse
	(*CDPResult)(nil),                    // 31: proto.CDPResult
	(*CDPResultValue)(nil),               // 32: proto.CDPResultValue
	(*CDPResultValueCoinTotal)(nil),      // 33: proto.CDPResultValueCoinTotal
	(*CDPResultValueCoins)(nil),          // 34: proto.CDPResultValueCoins
	(*CDPResultValueVestingPeridos)(nil), // 35: proto.CDPResultValueVestingPeridos
	(*CDPDetails)(nil),                   // 36: proto.CDPDetails
	(*CDPDetailsEnt)(nil),                // 37: proto.CDPDetailsEnt
	(*CDPDetailsEntCollateral)(nil),      // 38: proto.CDPDetailsEntCollateral
	(*CDPDetailsEntPrincipal)(nil),       // 39: proto.CDPDetailsEntPrincipal
	(*CDPDetailsEntAccumulated)(nil),     // 40: proto.CDPDetailsEntAccumulated
	(*CDPDetailsEntCollateralValue)(nil), // 41: proto.CDPDetailsEntCollateralValue
	(*CosmosSimulateTxRequest)(nil),      // 42: proto.CosmosSimulateTxRequest
	(*CosmosSimulateGasPrice)(nil),       // 43: proto.CosmosSimulateGasPrice
	(*CosmosSimulateTxResponse)(nil),     // 44: proto.CosmosSimulateTxResponse
	(*GetCosmosBlockHeightRequest)(nil),  // 45: proto.GetCosmosBlockHeightRequest
	(*GetCosmosBlockHeightResponse)(nil), // 46: proto.GetCosmosBlockHeightResponse
}
var file_cosmos_proto_depIdxs = []int32{
	1,  // 0: proto.CosmosAssetResponse.token:type_name -> proto.CosmosTokenBalance
	4,  // 1: proto.CosmosValidatorsResponse.validators:type_name -> proto.ValidatorInfo
	6,  // 2: proto.ValidatorInfo.description:type_name -> proto.ValidatorDescription
	7,  // 3: proto.ValidatorInfo.commission:type_name -> proto.ValidatorCommission
	6,  // 4: proto.ValidatorForDelegatorInfo.description:type_name -> proto.ValidatorDescription
	7,  // 5: proto.ValidatorForDelegatorInfo.commission:type_name -> proto.ValidatorCommission
	8,  // 6: proto.ValidatorCommission.commission_rates:type_name -> proto.ValidatorCommissionRates
	13, // 7: proto.CosmosDelegationsResponse.net_stake_values:type_name -> proto.OverallDenomsValues
	14, // 8: proto.CosmosDelegationsResponse.individual_stake_values:type_name -> proto.DenomsWiseValues
	15, // 9: proto.CosmosDelegationsResponse.delegations:type_name -> proto.DelegationsInfo
	20, // 10: proto.CosmosDelegationsResponse.unbound_delegations:type_name -> proto.UnDelegationsInfo
	16, // 11: proto.DelegationsInfo.delegation:type_name -> proto.DelegationDetail
	17, // 12: proto.DelegationsInfo.balance:type_name -> proto.BalanceDetail
	5,  // 13: proto.DelegationsInfo.validator_details:type_name -> proto.ValidatorForDelegatorInfo
	18, // 14: proto.DelegationsInfo.rewards_details:type_name -> proto.RewardsInfo
	19, // 15: proto.RewardsInfo.reward:type_name -> proto.RewardsListInfo
	16, // 16: proto.UnDelegationsInfo.delegation:type_name -> proto.DelegationDetail
	21, // 17: proto.UnDelegationsInfo.entries:type_name -> proto.Entries
	17, // 18: proto.UnDelegationsInfo.balance:type_name -> proto.BalanceDetail
	5,  // 19: proto.UnDelegationsInfo.validator_details:type_name -> proto.ValidatorForDelegatorInfo
	26, // 20: proto.CosmosCDPParametersResponse.collateral_params:type_name -> proto.CollateralParams
	28, // 21: proto.CosmosCDPParametersResponse.debt_param:type_name -> proto.DebtParam
	29, // 22: proto.CosmosCDPParametersResponse.global_debt_limit:type_name -> proto.GlobalDebtLimit
	27, // 23: proto.CollateralParams.debt_limit:type_name -> proto.DebtLimit
	31, // 24: proto.CosmosCDPResponse.result:type_name -> proto.CDPResult
	32, // 25: proto.CDPResult.value:type_name -> proto.CDPResultValue
	36, // 26: proto.CDPResult.cdp_details:type_name -> proto.CDPDetails
	25, // 27: proto.CDPResult.cdp_parameters:type_name -> proto.CosmosCDPParametersResponse
	33, // 28: proto.CDPResultValue.coin_total:type_name -> proto.CDPResultValueCoinTotal
	34, // 29: proto.CDPResultValue.coins:type_name -> proto.CDPResultValueCoins
	35, // 30: proto.CDPResultValue.vesting_periods:type_name -> proto.CDPResultValueVestingPeridos
	37, // 31: proto.CDPDetails.cdp:type_name -> proto.CDPDetailsEnt
	38, // 32: proto.CDPDetailsEnt.collateral:type_name -> proto.CDPDetailsEntCollateral
	39, // 33: proto.CDPDetailsEnt.principal:type_name -> proto.CDPDetailsEntPrincipal
	40, // 34: proto.CDPDetailsEnt.accumulated_fees:type_name -> proto.CDPDetailsEntAccumulated
	41, // 35: proto.CDPDetailsEnt.collateral_value:type_name -> proto.CDPDetailsEntCollateralValue
	43, // 36: proto.CosmosSimulateTxResponse.gas_price:type_name -> proto.CosmosSimulateGasPrice
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_cosmos_proto_init() }
func file_cosmos_proto_init() {
	if File_cosmos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosTokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosValidatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosValidatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorForDelegatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorCommissionRates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosAprRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosAprRatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosDelegationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosDelegationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverallDenomsValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenomsWiseValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardsListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnDelegationsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosSendTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosCDPParametersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosCDPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosCDPParametersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollateralParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalDebtLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosCDPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPResultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPResultValueCoinTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPResultValueCoins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPResultValueVestingPeridos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetailsEnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetailsEntCollateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetailsEntPrincipal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetailsEntAccumulated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDPDetailsEntCollateralValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosSimulateTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosSimulateGasPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosSimulateTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosmosBlockHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosmosBlockHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_proto_goTypes,
		DependencyIndexes: file_cosmos_proto_depIdxs,
		MessageInfos:      file_cosmos_proto_msgTypes,
	}.Build()
	File_cosmos_proto = out.File
	file_cosmos_proto_rawDesc = nil
	file_cosmos_proto_goTypes = nil
	file_cosmos_proto_depIdxs = nil
}
